package nrgrid

import (
	"github.com/zhenggao2/ngapp/utils"
)

// refer to 3GPP 38.104 vf30
//  Table 5.2-1: NR operating bands in FR1
//  Table 5.2-2: NR operating bands in FR2
var OpBands = utils.NewOrderedMap()
var BwSetFr1 = []string{"5MHz", "10MHz", "15MHz", "20MHz", "25MHz", "30MHz", "40MHz", "50MHz", "60MHz", "70MHz", "80MHz", "90MHz", "100MHz"}
var BwSetFr2 = []string{"50MHz", "100MHz", "200MHz", "400MHz"}

// refer to 3GPP 38.104 vf30
//  Table 5.3.5-1: BS channel bandwidths and SCS per operating band in FR1
var BandScs2BwFr1 = utils.NewOrderedMap()

// refer to 3GPP 38.104 vf30
//  Table 5.3.5-2: BS channel bandwidths and SCS per operating band in FR2
var BandScs2BwFr2 = utils.NewOrderedMap()

// refer to 3GPP 38.104 vf30
//  Table 5.3.2-1: Transmission bandwidth configuration N_RB for FR1
var NrbFr1 = map[int][]int{
	15: {25, 52, 79, 106, 133, 160, 216, 270, 0, 0, 0, 0, 0},
	30: {11, 24, 38, 51, 65, 78, 106, 133, 162, 189, 217, 245, 273},
	60: {0, 11, 18, 24, 31, 38, 51, 65, 79, 93, 107, 121, 135},
}

// refer to 3GPP 38.104 vf30
//  Table 5.3.2-2: Transmission bandwidth configuration N_RB for FR2
var NrbFr2 = map[int][]int{
	60:  {66, 132, 264, 0},
	120: {32, 66, 132, 264},
}

// refer to 3GPP 38.104 vf30
//  Table 5.4.3.3-1: Applicable SS raster entries per operating band (FR1)
//  Table 5.4.3.3-2: Applicable SS raster entries per operating band (FR2)
var SsbRasters = map[string][][]string{
	"n1":   {{"15KHz", "Case A", "5279-<1>-5419"}},
	"n2":   {{"15KHz", "Case A", "4829-<1>-4969"}},
	"n3":   {{"15KHz", "Case A", "4517-<1>-4693"}},
	"n5":   {{"15KHz", "Case A", "2177-<1>-2230"}, {"30KHz", "Case B", "2183-<1>-2224"}},
	"n7":   {{"15KHz", "Case A", "6554-<1>-6718"}},
	"n8":   {{"15KHz", "Case A", "2318-<1>-2395"}},
	"n12":  {{"15KHz", "Case A", "1828-<1>-1858"}},
	"n20":  {{"15KHz", "Case A", "1982-<1>-2047"}},
	"n25":  {{"15KHz", "Case A", "4829-<1>-4981"}},
	"n28":  {{"15KHz", "Case A", "1901-<1>-2002"}},
	"n34":  {{"15KHz", "Case A", "5030-<1>-5056"}},
	"n38":  {{"15KHz", "Case A", "6431-<1>-6544"}},
	"n39":  {{"15KHz", "Case A", "4706-<1>-4795"}},
	"n40":  {{"15KHz", "Case A", "5756-<1>-5995"}},
	"n41":  {{"15KHz", "Case A", "6246-<3>-6717"}, {"30KHz", "Case C", "6252-<3>-6714"}},
	"n50":  {{"15KHz", "Case A", "3584-<1>-3787"}},
	"n51":  {{"15KHz", "Case A", "3572-<1>-3574"}},
	"n66":  {{"15KHz", "Case A", "5279-<1>-5494"}, {"30KHz", "Case B", "5285-<1>-5488"}},
	"n70":  {{"15KHz", "Case A", "4993-<1>-5044"}},
	"n71":  {{"15KHz", "Case A", "1547-<1>-1624"}},
	"n74":  {{"15KHz", "Case A", "3692-<1>-3790"}},
	"n75":  {{"15KHz", "Case A", "3584-<1>-3787"}},
	"n76":  {{"15KHz", "Case A", "3572-<1>-3574"}},
	"n77":  {{"30KHz", "Case C", "7711-<1>-8329"}},
	"n78":  {{"30KHz", "Case C", "7711-<1>-8051"}},
	"n79":  {{"30KHz", "Case C", "8480-<16>-8880"}},
	"n257": {{"120KHz", "Case D", "22388-<1>-22558"}, {"240KHz", "Case E", "22390-<2>-22556"}},
	"n258": {{"120KHz", "Case D", "22257-<1>-22443"}, {"240KHz", "Case E", "22258-<2>-22442"}},
	"n260": {{"120KHz", "Case D", "22995-<1>-23166"}, {"240KHz", "Case E", "22996-<2>-23164"}},
	"n261": {{"120KHz", "Case D", "22446-<1>-22492"}, {"240KHz", "Case E", "22446-<2>-22490"}},
}

// Coreste0Info contains information for CORESET0/CSS0 mapping.
type Coreset0Info struct {
	MultiplexingPat int
	NumRbs          int
	NumSymbs        int
	OffsetLst       []int
}

// refer to 3GPP 38.213 vf30
//  Table 13-1: Set of resource blocks and slot symbols of control resource set for Type0-PDCCH search space when {SS/PBCH block, PDCCH} subcarrier spacing is {15, 15} kHz for frequency bands with minimum channel bandwidth 5 MHz or 10 MHz
//  Table 13-2: Set of resource blocks and slot symbols of control resource set for Type0-PDCCH search space when {SS/PBCH block, PDCCH} subcarrier spacing is {15, 30} kHz for frequency bands with minimum channel bandwidth 5 MHz or 10 MHz
//  Table 13-3: Set of resource blocks and slot symbols of control resource set for Type0-PDCCH search space when {SS/PBCH block, PDCCH} subcarrier spacing is {30, 15} kHz for frequency bands with minimum channel bandwidth 5 MHz or 10 MHz
//  Table 13-4: Set of resource blocks and slot symbols of control resource set for Type0-PDCCH search space when {SS/PBCH block, PDCCH} subcarrier spacing is {30, 30} kHz for frequency bands with minimum channel bandwidth 5 MHz or 10 MHz
// Table for FR1 with minimum channel bandwidth of 5MHz/10MHz
var Coreset0Fr1MinChBw5m10m = map[string]Coreset0Info{
	"15_15_0":  {1, 24, 2, []int{0}},
	"15_15_1":  {1, 24, 2, []int{2}},
	"15_15_2":  {1, 24, 2, []int{4}},
	"15_15_3":  {1, 24, 3, []int{0}},
	"15_15_4":  {1, 24, 3, []int{2}},
	"15_15_5":  {1, 24, 3, []int{4}},
	"15_15_6":  {1, 48, 1, []int{12}},
	"15_15_7":  {1, 48, 1, []int{16}},
	"15_15_8":  {1, 48, 2, []int{12}},
	"15_15_9":  {1, 48, 2, []int{16}},
	"15_15_10": {1, 48, 3, []int{12}},
	"15_15_11": {1, 48, 3, []int{16}},
	"15_15_12": {1, 96, 1, []int{38}},
	"15_15_13": {1, 96, 2, []int{38}},
	"15_15_14": {1, 96, 3, []int{38}},
	"15_15_15": nil,
	"15_30_0":  {1, 24, 2, []int{5}},
	"15_30_1":  {1, 24, 2, []int{6}},
	"15_30_2":  {1, 24, 2, []int{7}},
	"15_30_3":  {1, 24, 2, []int{8}},
	"15_30_4":  {1, 24, 3, []int{5}},
	"15_30_5":  {1, 24, 3, []int{6}},
	"15_30_6":  {1, 24, 3, []int{7}},
	"15_30_7":  {1, 24, 3, []int{8}},
	"15_30_8":  {1, 48, 1, []int{18}},
	"15_30_9":  {1, 48, 1, []int{20}},
	"15_30_10": {1, 48, 2, []int{18}},
	"15_30_11": {1, 48, 2, []int{20}},
	"15_30_12": {1, 48, 3, []int{18}},
	"15_30_13": {1, 48, 3, []int{20}},
	"15_30_14": nil,
	"15_30_15": nil,
	"30_15_0":  {1, 48, 1, []int{2}},
	"30_15_1":  {1, 48, 1, []int{6}},
	"30_15_2":  {1, 48, 2, []int{2}},
	"30_15_3":  {1, 48, 2, []int{6}},
	"30_15_4":  {1, 48, 3, []int{2}},
	"30_15_5":  {1, 48, 3, []int{6}},
	"30_15_6":  {1, 96, 1, []int{28}},
	"30_15_7":  {1, 96, 2, []int{28}},
	"30_15_8":  {1, 96, 3, []int{28}},
	"30_15_9":  nil,
	"30_15_10": nil,
	"30_15_11": nil,
	"30_15_12": nil,
	"30_15_13": nil,
	"30_15_14": nil,
	"30_15_15": nil,
	"30_30_0":  {1, 24, 2, []int{0}},
	"30_30_1":  {1, 24, 2, []int{1}},
	"30_30_2":  {1, 24, 2, []int{2}},
	"30_30_3":  {1, 24, 2, []int{3}},
	"30_30_4":  {1, 24, 2, []int{4}},
	"30_30_5":  {1, 24, 3, []int{0}},
	"30_30_6":  {1, 24, 3, []int{1}},
	"30_30_7":  {1, 24, 3, []int{2}},
	"30_30_8":  {1, 24, 3, []int{3}},
	"30_30_9":  {1, 24, 3, []int{4}},
	"30_30_10": {1, 48, 1, []int{12}},
	"30_30_11": {1, 48, 1, []int{14}},
	"30_30_12": {1, 48, 1, []int{16}},
	"30_30_13": {1, 48, 2, []int{12}},
	"30_30_14": {1, 48, 2, []int{14}},
	"30_30_15": {1, 48, 2, []int{16}},
}

// refer to 3GPP 38.213 vf30
//  Table 13-5: Set of resource blocks and slot symbols of control resource set for Type0-PDCCH search space when {SS/PBCH block, PDCCH} subcarrier spacing is {30, 15} kHz for frequency bands with minimum channel bandwidth 40MHz
//  Table 13-6: Set of resource blocks and slot symbols of control resource set for Type0-PDCCH search space when {SS/PBCH block, PDCCH} subcarrier spacing is {30, 30} kHz for frequency bands with minimum channel bandwidth 40MHz
// Table for FR1 with minimum channel bandwidth of 40MHz
var Coreset0Fr1MinChBw40m = map[string]Coreset0Info{
	"30_15_0":  {1, 48, 1, []int{4}},
	"30_15_1":  {1, 48, 2, []int{4}},
	"30_15_2":  {1, 48, 3, []int{4}},
	"30_15_3":  {1, 96, 1, []int{0}},
	"30_15_4":  {1, 96, 1, []int{56}},
	"30_15_5":  {1, 96, 2, []int{0}},
	"30_15_6":  {1, 96, 2, []int{56}},
	"30_15_7":  {1, 96, 3, []int{0}},
	"30_15_8":  {1, 96, 3, []int{56}},
	"30_15_9":  nil,
	"30_15_10": nil,
	"30_15_11": nil,
	"30_15_12": nil,
	"30_15_13": nil,
	"30_15_14": nil,
	"30_15_15": nil,
	"30_30_0":  {1, 24, 2, []int{0}},
	"30_30_1":  {1, 24, 2, []int{4}},
	"30_30_2":  {1, 24, 3, []int{0}},
	"30_30_3":  {1, 24, 3, []int{4}},
	"30_30_4":  {1, 48, 1, []int{0}},
	"30_30_5":  {1, 48, 1, []int{28}},
	"30_30_6":  {1, 48, 2, []int{0}},
	"30_30_7":  {1, 48, 2, []int{28}},
	"30_30_8":  {1, 48, 3, []int{0}},
	"30_30_9":  {1, 48, 3, []int{28}},
	"30_30_10": nil,
	"30_30_11": nil,
	"30_30_12": nil,
	"30_30_13": nil,
	"30_30_14": nil,
	"30_30_15": nil,
}

// refer to 3GPP 38.213 vf30
//  Table 13-7: Set of resource blocks and slot symbols of control resource set for Type0-PDCCH search space when {SS/PBCH block, PDCCH} subcarrier spacing is {120, 60} kHz
//  Table 13-8: Set of resource blocks and slot symbols of control resource set for Type0-PDCCH search space when {SS/PBCH block, PDCCH} subcarrier spacing is {120, 120} kHz
//  Table 13-9: Set of resource blocks and slot symbols of control resource set for Type0-PDCCH search space when {SS/PBCH block, PDCCH} subcarrier spacing is {240, 60} kHz
//  Table 13-10: Set of resource blocks and slot symbols of control resource set for Type0-PDCCH search space when {SS/PBCH block, PDCCH} subcarrier spacing is {240, 120} kHz
// Table for FR2
var Coreset0Fr2 = map[string]Coreset0Info{
	"120_60_0":   {1, 48, 1, []int{0}},
	"120_60_1":   {1, 48, 1, []int{8}},
	"120_60_2":   {1, 48, 2, []int{0}},
	"120_60_3":   {1, 48, 2, []int{8}},
	"120_60_4":   {1, 48, 3, []int{0}},
	"120_60_5":   {1, 48, 3, []int{8}},
	"120_60_6":   {1, 96, 1, []int{28}},
	"120_60_7":   {1, 96, 2, []int{28}},
	"120_60_8":   {2, 48, 1, []int{-41, -42}},
	"120_60_9":   {2, 48, 1, []int{49}},
	"120_60_10":  {2, 96, 1, []int{-41, -42}},
	"120_60_11":  {2, 96, 1, []int{97}},
	"120_60_12":  nil,
	"120_60_13":  nil,
	"120_60_14":  nil,
	"120_60_15":  nil,
	"120_120_0":  {1, 24, 2, []int{0}},
	"120_120_1":  {1, 24, 2, []int{4}},
	"120_120_2":  {1, 48, 1, []int{14}},
	"120_120_3":  {1, 48, 2, []int{14}},
	"120_120_4":  {3, 24, 2, []int{-20, -21}},
	"120_120_5":  {3, 24, 2, []int{24}},
	"120_120_6":  {3, 48, 2, []int{-20, -21}},
	"120_120_7":  {3, 48, 2, []int{48}},
	"120_120_8":  nil,
	"120_120_9":  nil,
	"120_120_10": nil,
	"120_120_11": nil,
	"120_120_12": nil,
	"120_120_13": nil,
	"120_120_14": nil,
	"120_120_15": nil,
	"240_60_0":   {1, 96, 1, []int{0}},
	"240_60_1":   {1, 96, 1, []int{16}},
	"240_60_2":   {1, 96, 2, []int{0}},
	"240_60_3":   {1, 96, 2, []int{16}},
	"240_60_4":   nil,
	"240_60_5":   nil,
	"240_60_6":   nil,
	"240_60_7":   nil,
	"240_60_8":   nil,
	"240_60_9":   nil,
	"240_60_10":  nil,
	"240_60_11":  nil,
	"240_60_12":  nil,
	"240_60_13":  nil,
	"240_60_14":  nil,
	"240_60_15":  nil,
	"240_120_0":  {1, 48, 1, []int{0}},
	"240_120_1":  {1, 48, 1, []int{8}},
	"240_120_2":  {1, 48, 2, []int{0}},
	"240_120_3":  {1, 48, 2, []int{8}},
	"240_120_4":  {2, 24, 1, []int{-41, -42}},
	"240_120_5":  {2, 24, 1, []int{25}},
	"240_120_6":  {2, 48, 1, []int{-41, -42}},
	"240_120_7":  {2, 48, 1, []int{49}},
	"240_120_8":  nil,
	"240_120_9":  nil,
	"240_120_10": nil,
	"240_120_11": nil,
	"240_120_12": nil,
	"240_120_13": nil,
	"240_120_14": nil,
	"240_120_15": nil,
}

// refer to 3GPP 38.211 vf30
//  Table 6.3.3.1-1: PRACH preamble formats for L_RA=839 and scsRA={1.25k, 5k}
var ScsRaLongPrach = map[string]string{
	"839_0": "1.25KHz",
	"839_1": "1.25KHz",
	"839_2": "1.25KHz",
	"839_3": "5KHz",
}

// refer to 3GPP 38.211 vf30
//  Table 6.3.3.2-1: Supported combinations of scsRA and scsPusch, and the corresponding value of kBar
var NumRbsRaAndKBar = map[string][]int{
	"839_1.25_15": {6, 7},
	"839_1.25_30": {3, 1},
	"839_1.25_60": {2, 133},
	"839_5_15":    {24, 12},
	"839_5_30":    {12, 10},
	"839_5_60":    {6, 7},
	"139_15_15":   {12, 2},
	"139_15_30":   {6, 2},
	"139_15_60":   {3, 2},
	"139_30_15":   {24, 2},
	"139_30_30":   {12, 2},
	"139_30_60":   {6, 2},
	"139_60_60":   {12, 2},
	"139_60_120":  {6, 2},
	"139_120_60":  {24, 2},
	"139_120_120": {12, 2},
}

// RachInfo contains information for PRACH time-domain mapping.
type RachInfo struct {
	Format                          string
	X                               int
	Y                               []int
	SubfNumFr1SlotNumFr2            []int
	StartingSymb                    int
	NumSlotsPerSubfFr1Per60KSlotFr2 int
	NumOccasionsPerSlot             int
	Duration                        int
}

// refer to 3GPP 38.211 vf30
//  Table 6.3.3.2-2: Random access configurations for FR1 and paired spectrum/supplementary uplink.
var RaCfgFr1FddSUl = map[int]RachInfo{
	0:   {"0", 16, []int{1}, []int{1}, 0, 1, 1, 0},
	1:   {"0", 16, []int{1}, []int{4}, 0, 1, 1, 0},
	2:   {"0", 16, []int{1}, []int{7}, 0, 1, 1, 0},
	3:   {"0", 16, []int{1}, []int{9}, 0, 1, 1, 0},
	4:   {"0", 8, []int{1}, []int{1}, 0, 1, 1, 0},
	5:   {"0", 8, []int{1}, []int{4}, 0, 1, 1, 0},
	6:   {"0", 8, []int{1}, []int{7}, 0, 1, 1, 0},
	7:   {"0", 8, []int{1}, []int{9}, 0, 1, 1, 0},
	8:   {"0", 4, []int{1}, []int{1}, 0, 1, 1, 0},
	9:   {"0", 4, []int{1}, []int{4}, 0, 1, 1, 0},
	10:  {"0", 4, []int{1}, []int{7}, 0, 1, 1, 0},
	11:  {"0", 4, []int{1}, []int{9}, 0, 1, 1, 0},
	12:  {"0", 2, []int{1}, []int{1}, 0, 1, 1, 0},
	13:  {"0", 2, []int{1}, []int{4}, 0, 1, 1, 0},
	14:  {"0", 2, []int{1}, []int{7}, 0, 1, 1, 0},
	15:  {"0", 2, []int{1}, []int{9}, 0, 1, 1, 0},
	16:  {"0", 1, []int{0}, []int{1}, 0, 1, 1, 0},
	17:  {"0", 1, []int{0}, []int{4}, 0, 1, 1, 0},
	18:  {"0", 1, []int{0}, []int{7}, 0, 1, 1, 0},
	19:  {"0", 1, []int{0}, []int{1, 6}, 0, 1, 1, 0},
	20:  {"0", 1, []int{0}, []int{2, 7}, 0, 1, 1, 0},
	21:  {"0", 1, []int{0}, []int{3, 8}, 0, 1, 1, 0},
	22:  {"0", 1, []int{0}, []int{1, 4, 7}, 0, 1, 1, 0},
	23:  {"0", 1, []int{0}, []int{2, 5, 8}, 0, 1, 1, 0},
	24:  {"0", 1, []int{0}, []int{3, 6, 9}, 0, 1, 1, 0},
	25:  {"0", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 1, 1, 0},
	26:  {"0", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 1, 1, 0},
	27:  {"0", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 1, 1, 0},
	28:  {"1", 16, []int{1}, []int{1}, 0, 1, 1, 0},
	29:  {"1", 16, []int{1}, []int{4}, 0, 1, 1, 0},
	30:  {"1", 16, []int{1}, []int{7}, 0, 1, 1, 0},
	31:  {"1", 16, []int{1}, []int{9}, 0, 1, 1, 0},
	32:  {"1", 8, []int{1}, []int{1}, 0, 1, 1, 0},
	33:  {"1", 8, []int{1}, []int{4}, 0, 1, 1, 0},
	34:  {"1", 8, []int{1}, []int{7}, 0, 1, 1, 0},
	35:  {"1", 8, []int{1}, []int{9}, 0, 1, 1, 0},
	36:  {"1", 4, []int{1}, []int{1}, 0, 1, 1, 0},
	37:  {"1", 4, []int{1}, []int{4}, 0, 1, 1, 0},
	38:  {"1", 4, []int{1}, []int{7}, 0, 1, 1, 0},
	39:  {"1", 4, []int{1}, []int{9}, 0, 1, 1, 0},
	40:  {"1", 2, []int{1}, []int{1}, 0, 1, 1, 0},
	41:  {"1", 2, []int{1}, []int{4}, 0, 1, 1, 0},
	42:  {"1", 2, []int{1}, []int{7}, 0, 1, 1, 0},
	43:  {"1", 2, []int{1}, []int{9}, 0, 1, 1, 0},
	44:  {"1", 1, []int{0}, []int{1}, 0, 1, 1, 0},
	45:  {"1", 1, []int{0}, []int{4}, 0, 1, 1, 0},
	46:  {"1", 1, []int{0}, []int{7}, 0, 1, 1, 0},
	47:  {"1", 1, []int{0}, []int{1, 6}, 0, 1, 1, 0},
	48:  {"1", 1, []int{0}, []int{2, 7}, 0, 1, 1, 0},
	49:  {"1", 1, []int{0}, []int{3, 8}, 0, 1, 1, 0},
	50:  {"1", 1, []int{0}, []int{1, 4, 7}, 0, 1, 1, 0},
	51:  {"1", 1, []int{0}, []int{2, 5, 8}, 0, 1, 1, 0},
	52:  {"1", 1, []int{0}, []int{3, 6, 9}, 0, 1, 1, 0},
	53:  {"2", 16, []int{1}, []int{1}, 0, 1, 1, 0},
	54:  {"2", 8, []int{1}, []int{1}, 0, 1, 1, 0},
	55:  {"2", 4, []int{0}, []int{1}, 0, 1, 1, 0},
	56:  {"2", 2, []int{0}, []int{1}, 0, 1, 1, 0},
	57:  {"2", 2, []int{0}, []int{5}, 0, 1, 1, 0},
	58:  {"2", 1, []int{0}, []int{1}, 0, 1, 1, 0},
	59:  {"2", 1, []int{0}, []int{5}, 0, 1, 1, 0},
	60:  {"3", 16, []int{1}, []int{1}, 0, 1, 1, 0},
	61:  {"3", 16, []int{1}, []int{4}, 0, 1, 1, 0},
	62:  {"3", 16, []int{1}, []int{7}, 0, 1, 1, 0},
	63:  {"3", 16, []int{1}, []int{9}, 0, 1, 1, 0},
	64:  {"3", 8, []int{1}, []int{1}, 0, 1, 1, 0},
	65:  {"3", 8, []int{1}, []int{4}, 0, 1, 1, 0},
	66:  {"3", 8, []int{1}, []int{7}, 0, 1, 1, 0},
	67:  {"3", 4, []int{1}, []int{1}, 0, 1, 1, 0},
	68:  {"3", 4, []int{1}, []int{4}, 0, 1, 1, 0},
	69:  {"3", 4, []int{1}, []int{7}, 0, 1, 1, 0},
	70:  {"3", 4, []int{1}, []int{9}, 0, 1, 1, 0},
	71:  {"3", 2, []int{1}, []int{1}, 0, 1, 1, 0},
	72:  {"3", 2, []int{1}, []int{4}, 0, 1, 1, 0},
	73:  {"3", 2, []int{1}, []int{7}, 0, 1, 1, 0},
	74:  {"3", 2, []int{1}, []int{9}, 0, 1, 1, 0},
	75:  {"3", 1, []int{0}, []int{1}, 0, 1, 1, 0},
	76:  {"3", 1, []int{0}, []int{4}, 0, 1, 1, 0},
	77:  {"3", 1, []int{0}, []int{7}, 0, 1, 1, 0},
	78:  {"3", 1, []int{0}, []int{1, 6}, 0, 1, 1, 0},
	79:  {"3", 1, []int{0}, []int{2, 7}, 0, 1, 1, 0},
	80:  {"3", 1, []int{0}, []int{3, 8}, 0, 1, 1, 0},
	81:  {"3", 1, []int{0}, []int{1, 4, 7}, 0, 1, 1, 0},
	82:  {"3", 1, []int{0}, []int{2, 5, 8}, 0, 1, 1, 0},
	83:  {"3", 1, []int{0}, []int{3, 6, 9}, 0, 1, 1, 0},
	84:  {"3", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 1, 1, 0},
	85:  {"3", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 1, 1, 0},
	86:  {"3", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 1, 1, 0},
	87:  {"A1", 16, []int{0}, []int{4, 9}, 0, 1, 6, 2},
	88:  {"A1", 16, []int{1}, []int{4}, 0, 2, 6, 2},
	89:  {"A1", 8, []int{0}, []int{4, 9}, 0, 1, 6, 2},
	90:  {"A1", 8, []int{1}, []int{4}, 0, 2, 6, 2},
	91:  {"A1", 4, []int{0}, []int{4, 9}, 0, 1, 6, 2},
	92:  {"A1", 4, []int{1}, []int{4, 9}, 0, 1, 6, 2},
	93:  {"A1", 4, []int{0}, []int{4}, 0, 2, 6, 2},
	94:  {"A1", 2, []int{0}, []int{4, 9}, 0, 1, 6, 2},
	95:  {"A1", 2, []int{0}, []int{1}, 0, 2, 6, 2},
	96:  {"A1", 2, []int{0}, []int{4}, 0, 2, 6, 2},
	97:  {"A1", 2, []int{0}, []int{7}, 0, 2, 6, 2},
	98:  {"A1", 1, []int{0}, []int{4}, 0, 1, 6, 2},
	99:  {"A1", 1, []int{0}, []int{1, 6}, 0, 1, 6, 2},
	100: {"A1", 1, []int{0}, []int{4, 9}, 0, 1, 6, 2},
	101: {"A1", 1, []int{0}, []int{1}, 0, 2, 6, 2},
	102: {"A1", 1, []int{0}, []int{7}, 0, 2, 6, 2},
	103: {"A1", 1, []int{0}, []int{2, 7}, 0, 2, 6, 2},
	104: {"A1", 1, []int{0}, []int{1, 4, 7}, 0, 2, 6, 2},
	105: {"A1", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 2, 6, 2},
	106: {"A1", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 2, 6, 2},
	107: {"A1", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 2, 6, 2},
	108: {"A1/B1", 2, []int{0}, []int{4, 9}, 0, 1, 7, 2},
	109: {"A1/B1", 2, []int{0}, []int{4}, 0, 2, 7, 2},
	110: {"A1/B1", 1, []int{0}, []int{4}, 0, 1, 7, 2},
	111: {"A1/B1", 1, []int{0}, []int{1, 6}, 0, 1, 7, 2},
	112: {"A1/B1", 1, []int{0}, []int{4, 9}, 0, 1, 7, 2},
	113: {"A1/B1", 1, []int{0}, []int{1}, 0, 2, 7, 2},
	114: {"A1/B1", 1, []int{0}, []int{7}, 0, 2, 7, 2},
	115: {"A1/B1", 1, []int{0}, []int{1, 4, 7}, 0, 2, 7, 2},
	116: {"A1/B1", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 2, 7, 2},
	117: {"A2", 16, []int{1}, []int{2, 6, 9}, 0, 1, 3, 4},
	118: {"A2", 16, []int{1}, []int{4}, 0, 2, 3, 4},
	119: {"A2", 8, []int{1}, []int{2, 6, 9}, 0, 1, 3, 4},
	120: {"A2", 8, []int{1}, []int{4}, 0, 2, 3, 4},
	121: {"A2", 4, []int{0}, []int{2, 6, 9}, 0, 1, 3, 4},
	122: {"A2", 4, []int{0}, []int{4}, 0, 2, 3, 4},
	123: {"A2", 2, []int{1}, []int{2, 6, 9}, 0, 1, 3, 4},
	124: {"A2", 2, []int{0}, []int{1}, 0, 2, 3, 4},
	125: {"A2", 2, []int{0}, []int{4}, 0, 2, 3, 4},
	126: {"A2", 2, []int{0}, []int{7}, 0, 2, 3, 4},
	127: {"A2", 1, []int{0}, []int{4}, 0, 1, 3, 4},
	128: {"A2", 1, []int{0}, []int{1, 6}, 0, 1, 3, 4},
	129: {"A2", 1, []int{0}, []int{4, 9}, 0, 1, 3, 4},
	130: {"A2", 1, []int{0}, []int{1}, 0, 2, 3, 4},
	131: {"A2", 1, []int{0}, []int{7}, 0, 2, 3, 4},
	132: {"A2", 1, []int{0}, []int{2, 7}, 0, 2, 3, 4},
	133: {"A2", 1, []int{0}, []int{1, 4, 7}, 0, 2, 3, 4},
	134: {"A2", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 2, 3, 4},
	135: {"A2", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 2, 3, 4},
	136: {"A2", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 2, 3, 4},
	137: {"A2/B2", 2, []int{1}, []int{2, 6, 9}, 0, 1, 3, 4},
	138: {"A2/B2", 2, []int{0}, []int{4}, 0, 2, 3, 4},
	139: {"A2/B2", 1, []int{0}, []int{4}, 0, 1, 3, 4},
	140: {"A2/B2", 1, []int{0}, []int{1, 6}, 0, 1, 3, 4},
	141: {"A2/B2", 1, []int{0}, []int{4, 9}, 0, 1, 3, 4},
	142: {"A2/B2", 1, []int{0}, []int{1}, 0, 2, 3, 4},
	143: {"A2/B2", 1, []int{0}, []int{7}, 0, 2, 3, 4},
	144: {"A2/B2", 1, []int{0}, []int{1, 4, 7}, 0, 2, 3, 4},
	145: {"A2/B2", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 2, 3, 4},
	146: {"A2/B2", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 2, 3, 4},
	147: {"A3", 16, []int{1}, []int{4, 9}, 0, 1, 2, 6},
	148: {"A3", 16, []int{1}, []int{4}, 0, 2, 2, 6},
	149: {"A3", 8, []int{1}, []int{4, 9}, 0, 1, 2, 6},
	150: {"A3", 8, []int{1}, []int{4}, 0, 2, 2, 6},
	151: {"A3", 4, []int{0}, []int{4, 9}, 0, 1, 2, 6},
	152: {"A3", 4, []int{0}, []int{4}, 0, 2, 2, 6},
	153: {"A3", 2, []int{1}, []int{2, 6, 9}, 0, 2, 2, 6},
	154: {"A3", 2, []int{0}, []int{1}, 0, 2, 2, 6},
	155: {"A3", 2, []int{0}, []int{4}, 0, 2, 2, 6},
	156: {"A3", 2, []int{0}, []int{7}, 0, 2, 2, 6},
	157: {"A3", 1, []int{0}, []int{4}, 0, 1, 2, 6},
	158: {"A3", 1, []int{0}, []int{1, 6}, 0, 1, 2, 6},
	159: {"A3", 1, []int{0}, []int{4, 9}, 0, 1, 2, 6},
	160: {"A3", 1, []int{0}, []int{1}, 0, 2, 2, 6},
	161: {"A3", 1, []int{0}, []int{7}, 0, 2, 2, 6},
	162: {"A3", 1, []int{0}, []int{2, 7}, 0, 2, 2, 6},
	163: {"A3", 1, []int{0}, []int{1, 4, 7}, 0, 2, 2, 6},
	164: {"A3", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 2, 2, 6},
	165: {"A3", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 2, 2, 6},
	166: {"A3", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 2, 2, 6},
	167: {"A3/B3", 2, []int{1}, []int{2, 6, 9}, 0, 2, 2, 6},
	168: {"A3/B3", 2, []int{0}, []int{4}, 0, 2, 2, 6},
	169: {"A3/B3", 1, []int{0}, []int{4}, 0, 1, 2, 6},
	170: {"A3/B3", 1, []int{0}, []int{1, 6}, 0, 1, 2, 6},
	171: {"A3/B3", 1, []int{0}, []int{4, 9}, 0, 1, 2, 6},
	172: {"A3/B3", 1, []int{0}, []int{1}, 0, 2, 2, 6},
	173: {"A3/B3", 1, []int{0}, []int{7}, 0, 2, 2, 6},
	174: {"A3/B3", 1, []int{0}, []int{1, 4, 7}, 0, 2, 2, 6},
	175: {"A3/B3", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 2, 2, 6},
	176: {"A3/B3", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 2, 2, 6},
	177: {"B1", 16, []int{0}, []int{4, 9}, 0, 1, 7, 2},
	178: {"B1", 16, []int{1}, []int{4}, 0, 2, 7, 2},
	179: {"B1", 8, []int{0}, []int{4, 9}, 0, 1, 7, 2},
	180: {"B1", 8, []int{1}, []int{4}, 0, 2, 7, 2},
	181: {"B1", 4, []int{0}, []int{4, 9}, 0, 1, 7, 2},
	182: {"B1", 4, []int{1}, []int{4, 9}, 0, 1, 7, 2},
	183: {"B1", 4, []int{0}, []int{4}, 0, 2, 7, 2},
	184: {"B1", 2, []int{0}, []int{4, 9}, 0, 1, 7, 2},
	185: {"B1", 2, []int{0}, []int{1}, 0, 2, 7, 2},
	186: {"B1", 2, []int{0}, []int{4}, 0, 2, 7, 2},
	187: {"B1", 2, []int{0}, []int{7}, 0, 2, 7, 2},
	188: {"B1", 1, []int{0}, []int{4}, 0, 1, 7, 2},
	189: {"B1", 1, []int{0}, []int{1, 6}, 0, 1, 7, 2},
	190: {"B1", 1, []int{0}, []int{4, 9}, 0, 1, 7, 2},
	191: {"B1", 1, []int{0}, []int{1}, 0, 2, 7, 2},
	192: {"B1", 1, []int{0}, []int{7}, 0, 2, 7, 2},
	193: {"B1", 1, []int{0}, []int{2, 7}, 0, 2, 7, 2},
	194: {"B1", 1, []int{0}, []int{1, 4, 7}, 0, 2, 7, 2},
	195: {"B1", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 2, 7, 2},
	196: {"B1", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 2, 7, 2},
	197: {"B1", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 2, 7, 2},
	198: {"B4", 16, []int{0}, []int{4, 9}, 0, 2, 1, 12},
	199: {"B4", 16, []int{1}, []int{4}, 0, 2, 1, 12},
	200: {"B4", 8, []int{0}, []int{4, 9}, 0, 2, 1, 12},
	201: {"B4", 8, []int{1}, []int{4}, 0, 2, 1, 12},
	202: {"B4", 4, []int{0}, []int{4, 9}, 0, 2, 1, 12},
	203: {"B4", 4, []int{0}, []int{4}, 0, 2, 1, 12},
	204: {"B4", 4, []int{1}, []int{4, 9}, 0, 2, 1, 12},
	205: {"B4", 2, []int{0}, []int{4, 9}, 0, 2, 1, 12},
	206: {"B4", 2, []int{0}, []int{1}, 0, 2, 1, 12},
	207: {"B4", 2, []int{0}, []int{4}, 0, 2, 1, 12},
	208: {"B4", 2, []int{0}, []int{7}, 0, 2, 1, 12},
	209: {"B4", 1, []int{0}, []int{1}, 0, 2, 1, 12},
	210: {"B4", 1, []int{0}, []int{4}, 0, 2, 1, 12},
	211: {"B4", 1, []int{0}, []int{7}, 0, 2, 1, 12},
	212: {"B4", 1, []int{0}, []int{1, 6}, 0, 2, 1, 12},
	213: {"B4", 1, []int{0}, []int{2, 7}, 0, 2, 1, 12},
	214: {"B4", 1, []int{0}, []int{4, 9}, 0, 2, 1, 12},
	215: {"B4", 1, []int{0}, []int{1, 4, 7}, 0, 2, 1, 12},
	216: {"B4", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 2, 1, 12},
	217: {"B4", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 2, 1, 12},
	218: {"B4", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 2, 1, 12},
	219: {"C0", 8, []int{1}, []int{4}, 0, 2, 7, 2},
	220: {"C0", 4, []int{1}, []int{4, 9}, 0, 1, 7, 2},
	221: {"C0", 4, []int{0}, []int{4}, 0, 2, 7, 2},
	222: {"C0", 2, []int{0}, []int{4, 9}, 0, 1, 7, 2},
	223: {"C0", 2, []int{0}, []int{1}, 0, 2, 7, 2},
	224: {"C0", 2, []int{0}, []int{4}, 0, 2, 7, 2},
	225: {"C0", 2, []int{0}, []int{7}, 0, 2, 7, 2},
	226: {"C0", 1, []int{0}, []int{4}, 0, 1, 7, 2},
	227: {"C0", 1, []int{0}, []int{1, 6}, 0, 1, 7, 2},
	228: {"C0", 1, []int{0}, []int{4, 9}, 0, 1, 7, 2},
	229: {"C0", 1, []int{0}, []int{1}, 0, 2, 7, 2},
	230: {"C0", 1, []int{0}, []int{7}, 0, 2, 7, 2},
	231: {"C0", 1, []int{0}, []int{2, 7}, 0, 2, 7, 2},
	232: {"C0", 1, []int{0}, []int{1, 4, 7}, 0, 2, 7, 2},
	233: {"C0", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 2, 7, 2},
	234: {"C0", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 2, 7, 2},
	235: {"C0", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 2, 7, 2},
	236: {"C2", 16, []int{1}, []int{4, 9}, 0, 1, 2, 6},
	237: {"C2", 16, []int{1}, []int{4}, 0, 2, 2, 6},
	238: {"C2", 8, []int{1}, []int{4, 9}, 0, 1, 2, 6},
	239: {"C2", 8, []int{1}, []int{4}, 0, 2, 2, 6},
	240: {"C2", 4, []int{0}, []int{4, 9}, 0, 1, 2, 6},
	241: {"C2", 4, []int{0}, []int{4}, 0, 2, 2, 6},
	242: {"C2", 2, []int{1}, []int{2, 6, 9}, 0, 2, 2, 6},
	243: {"C2", 2, []int{0}, []int{1}, 0, 2, 2, 6},
	244: {"C2", 2, []int{0}, []int{4}, 0, 2, 2, 6},
	245: {"C2", 2, []int{0}, []int{7}, 0, 2, 2, 6},
	246: {"C2", 1, []int{0}, []int{4}, 0, 1, 2, 6},
	247: {"C2", 1, []int{0}, []int{1, 6}, 0, 1, 2, 6},
	248: {"C2", 1, []int{0}, []int{4, 9}, 0, 1, 2, 6},
	249: {"C2", 1, []int{0}, []int{1}, 0, 2, 2, 6},
	250: {"C2", 1, []int{0}, []int{7}, 0, 2, 2, 6},
	251: {"C2", 1, []int{0}, []int{2, 7}, 0, 2, 2, 6},
	252: {"C2", 1, []int{0}, []int{1, 4, 7}, 0, 2, 2, 6},
	253: {"C2", 1, []int{0}, []int{0, 2, 4, 6, 8}, 0, 2, 2, 6},
	254: {"C2", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 2, 2, 6},
	255: {"C2", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 2, 2, 6},
}

// refer to 3GPP 38.211 vf30
//  Table 6.3.3.2-3: Random access configurations for FR1 and unpaired spectrum.
var RaCfgFr1Tdd = map[int]RachInfo{
	0:   {"0", 16, []int{1}, []int{9}, 0, 1, 1, 0},
	1:   {"0", 8, []int{1}, []int{9}, 0, 1, 1, 0},
	2:   {"0", 4, []int{1}, []int{9}, 0, 1, 1, 0},
	3:   {"0", 2, []int{0}, []int{9}, 0, 1, 1, 0},
	4:   {"0", 2, []int{1}, []int{9}, 0, 1, 1, 0},
	5:   {"0", 2, []int{0}, []int{4}, 0, 1, 1, 0},
	6:   {"0", 2, []int{1}, []int{4}, 0, 1, 1, 0},
	7:   {"0", 1, []int{0}, []int{9}, 0, 1, 1, 0},
	8:   {"0", 1, []int{0}, []int{8}, 0, 1, 1, 0},
	9:   {"0", 1, []int{0}, []int{7}, 0, 1, 1, 0},
	10:  {"0", 1, []int{0}, []int{6}, 0, 1, 1, 0},
	11:  {"0", 1, []int{0}, []int{5}, 0, 1, 1, 0},
	12:  {"0", 1, []int{0}, []int{4}, 0, 1, 1, 0},
	13:  {"0", 1, []int{0}, []int{3}, 0, 1, 1, 0},
	14:  {"0", 1, []int{0}, []int{2}, 0, 1, 1, 0},
	15:  {"0", 1, []int{0}, []int{1, 6}, 0, 1, 1, 0},
	16:  {"0", 1, []int{0}, []int{1, 6}, 7, 1, 1, 0},
	17:  {"0", 1, []int{0}, []int{4, 9}, 0, 1, 1, 0},
	18:  {"0", 1, []int{0}, []int{3, 8}, 0, 1, 1, 0},
	19:  {"0", 1, []int{0}, []int{2, 7}, 0, 1, 1, 0},
	20:  {"0", 1, []int{0}, []int{8, 9}, 0, 1, 1, 0},
	21:  {"0", 1, []int{0}, []int{4, 8, 9}, 0, 1, 1, 0},
	22:  {"0", 1, []int{0}, []int{3, 4, 9}, 0, 1, 1, 0},
	23:  {"0", 1, []int{0}, []int{7, 8, 9}, 0, 1, 1, 0},
	24:  {"0", 1, []int{0}, []int{3, 4, 8, 9}, 0, 1, 1, 0},
	25:  {"0", 1, []int{0}, []int{6, 7, 8, 9}, 0, 1, 1, 0},
	26:  {"0", 1, []int{0}, []int{1, 4, 6, 9}, 0, 1, 1, 0},
	27:  {"0", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 1, 1, 0},
	28:  {"1", 16, []int{1}, []int{7}, 0, 1, 1, 0},
	29:  {"1", 8, []int{1}, []int{7}, 0, 1, 1, 0},
	30:  {"1", 4, []int{1}, []int{7}, 0, 1, 1, 0},
	31:  {"1", 2, []int{0}, []int{7}, 0, 1, 1, 0},
	32:  {"1", 2, []int{1}, []int{7}, 0, 1, 1, 0},
	33:  {"1", 1, []int{0}, []int{7}, 0, 1, 1, 0},
	34:  {"2", 16, []int{1}, []int{6}, 0, 1, 1, 0},
	35:  {"2", 8, []int{1}, []int{6}, 0, 1, 1, 0},
	36:  {"2", 4, []int{1}, []int{6}, 0, 1, 1, 0},
	37:  {"2", 2, []int{0}, []int{6}, 7, 1, 1, 0},
	38:  {"2", 2, []int{1}, []int{6}, 7, 1, 1, 0},
	39:  {"2", 1, []int{0}, []int{6}, 7, 1, 1, 0},
	40:  {"3", 16, []int{1}, []int{9}, 0, 1, 1, 0},
	41:  {"3", 8, []int{1}, []int{9}, 0, 1, 1, 0},
	42:  {"3", 4, []int{1}, []int{9}, 0, 1, 1, 0},
	43:  {"3", 2, []int{0}, []int{9}, 0, 1, 1, 0},
	44:  {"3", 2, []int{1}, []int{9}, 0, 1, 1, 0},
	45:  {"3", 2, []int{0}, []int{4}, 0, 1, 1, 0},
	46:  {"3", 2, []int{1}, []int{4}, 0, 1, 1, 0},
	47:  {"3", 1, []int{0}, []int{9}, 0, 1, 1, 0},
	48:  {"3", 1, []int{0}, []int{8}, 0, 1, 1, 0},
	49:  {"3", 1, []int{0}, []int{7}, 0, 1, 1, 0},
	50:  {"3", 1, []int{0}, []int{6}, 0, 1, 1, 0},
	51:  {"3", 1, []int{0}, []int{5}, 0, 1, 1, 0},
	52:  {"3", 1, []int{0}, []int{4}, 0, 1, 1, 0},
	53:  {"3", 1, []int{0}, []int{3}, 0, 1, 1, 0},
	54:  {"3", 1, []int{0}, []int{2}, 0, 1, 1, 0},
	55:  {"3", 1, []int{0}, []int{1, 6}, 0, 1, 1, 0},
	56:  {"3", 1, []int{0}, []int{1, 6}, 7, 1, 1, 0},
	57:  {"3", 1, []int{0}, []int{4, 9}, 0, 1, 1, 0},
	58:  {"3", 1, []int{0}, []int{3, 8}, 0, 1, 1, 0},
	59:  {"3", 1, []int{0}, []int{2, 7}, 0, 1, 1, 0},
	60:  {"3", 1, []int{0}, []int{8, 9}, 0, 1, 1, 0},
	61:  {"3", 1, []int{0}, []int{4, 8, 9}, 0, 1, 1, 0},
	62:  {"3", 1, []int{0}, []int{3, 4, 9}, 0, 1, 1, 0},
	63:  {"3", 1, []int{0}, []int{7, 8, 9}, 0, 1, 1, 0},
	64:  {"3", 1, []int{0}, []int{3, 4, 8, 9}, 0, 1, 1, 0},
	65:  {"3", 1, []int{0}, []int{1, 4, 6, 9}, 0, 1, 1, 0},
	66:  {"3", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 1, 1, 0},
	67:  {"A1", 16, []int{1}, []int{9}, 0, 2, 6, 2},
	68:  {"A1", 8, []int{1}, []int{9}, 0, 2, 6, 2},
	69:  {"A1", 4, []int{1}, []int{9}, 0, 1, 6, 2},
	70:  {"A1", 2, []int{1}, []int{9}, 0, 1, 6, 2},
	71:  {"A1", 2, []int{1}, []int{4, 9}, 7, 1, 3, 2},
	72:  {"A1", 2, []int{1}, []int{7, 9}, 7, 1, 3, 2},
	73:  {"A1", 2, []int{1}, []int{7, 9}, 0, 1, 6, 2},
	74:  {"A1", 2, []int{1}, []int{8, 9}, 0, 2, 6, 2},
	75:  {"A1", 2, []int{1}, []int{4, 9}, 0, 2, 6, 2},
	76:  {"A1", 2, []int{1}, []int{2, 3, 4, 7, 8, 9}, 0, 1, 6, 2},
	77:  {"A1", 1, []int{0}, []int{9}, 0, 2, 6, 2},
	78:  {"A1", 1, []int{0}, []int{9}, 7, 1, 3, 2},
	79:  {"A1", 1, []int{0}, []int{9}, 0, 1, 6, 2},
	80:  {"A1", 1, []int{0}, []int{8, 9}, 0, 2, 6, 2},
	81:  {"A1", 1, []int{0}, []int{4, 9}, 0, 1, 6, 2},
	82:  {"A1", 1, []int{0}, []int{7, 9}, 7, 1, 3, 2},
	83:  {"A1", 1, []int{0}, []int{3, 4, 8, 9}, 0, 1, 6, 2},
	84:  {"A1", 1, []int{0}, []int{3, 4, 8, 9}, 0, 2, 6, 2},
	85:  {"A1", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 1, 6, 2},
	86:  {"A1", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 7, 1, 3, 2},
	87:  {"A2", 16, []int{1}, []int{9}, 0, 2, 3, 4},
	88:  {"A2", 8, []int{1}, []int{9}, 0, 2, 3, 4},
	89:  {"A2", 4, []int{1}, []int{9}, 0, 1, 3, 4},
	90:  {"A2", 2, []int{1}, []int{7, 9}, 0, 1, 3, 4},
	91:  {"A2", 2, []int{1}, []int{8, 9}, 0, 2, 3, 4},
	92:  {"A2", 2, []int{1}, []int{7, 9}, 9, 1, 1, 4},
	93:  {"A2", 2, []int{1}, []int{4, 9}, 9, 1, 1, 4},
	94:  {"A2", 2, []int{1}, []int{4, 9}, 0, 2, 3, 4},
	95:  {"A2", 2, []int{1}, []int{2, 3, 4, 7, 8, 9}, 0, 1, 3, 4},
	96:  {"A2", 1, []int{0}, []int{2}, 0, 1, 3, 4},
	97:  {"A2", 1, []int{0}, []int{7}, 0, 1, 3, 4},
	98:  {"A2", 2, []int{1}, []int{9}, 0, 1, 3, 4},
	99:  {"A2", 1, []int{0}, []int{9}, 0, 2, 3, 4},
	100: {"A2", 1, []int{0}, []int{9}, 9, 1, 1, 4},
	101: {"A2", 1, []int{0}, []int{9}, 0, 1, 3, 4},
	102: {"A2", 1, []int{0}, []int{2, 7}, 0, 1, 3, 4},
	103: {"A2", 1, []int{0}, []int{8, 9}, 0, 2, 3, 4},
	104: {"A2", 1, []int{0}, []int{4, 9}, 0, 1, 3, 4},
	105: {"A2", 1, []int{0}, []int{7, 9}, 9, 1, 1, 4},
	106: {"A2", 1, []int{0}, []int{3, 4, 8, 9}, 0, 1, 3, 4},
	107: {"A2", 1, []int{0}, []int{3, 4, 8, 9}, 0, 2, 3, 4},
	108: {"A2", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 1, 3, 4},
	109: {"A2", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 9, 1, 1, 4},
	110: {"A3", 16, []int{1}, []int{9}, 0, 2, 2, 6},
	111: {"A3", 8, []int{1}, []int{9}, 0, 2, 2, 6},
	112: {"A3", 4, []int{1}, []int{9}, 0, 1, 2, 6},
	113: {"A3", 2, []int{1}, []int{4, 9}, 7, 1, 1, 6},
	114: {"A3", 2, []int{1}, []int{7, 9}, 7, 1, 1, 6},
	115: {"A3", 2, []int{1}, []int{7, 9}, 0, 1, 2, 6},
	116: {"A3", 2, []int{1}, []int{4, 9}, 0, 2, 2, 6},
	117: {"A3", 2, []int{1}, []int{8, 9}, 0, 2, 2, 6},
	118: {"A3", 2, []int{1}, []int{2, 3, 4, 7, 8, 9}, 0, 1, 2, 6},
	119: {"A3", 1, []int{0}, []int{2}, 0, 1, 2, 6},
	120: {"A3", 1, []int{0}, []int{7}, 0, 1, 2, 6},
	121: {"A3", 2, []int{1}, []int{9}, 0, 1, 2, 6},
	122: {"A3", 1, []int{0}, []int{9}, 0, 2, 2, 6},
	123: {"A3", 1, []int{0}, []int{9}, 7, 1, 1, 6},
	124: {"A3", 1, []int{0}, []int{9}, 0, 1, 2, 6},
	125: {"A3", 1, []int{0}, []int{2, 7}, 0, 1, 2, 6},
	126: {"A3", 1, []int{0}, []int{8, 9}, 0, 2, 2, 6},
	127: {"A3", 1, []int{0}, []int{4, 9}, 0, 1, 2, 6},
	128: {"A3", 1, []int{0}, []int{7, 9}, 7, 1, 1, 6},
	129: {"A3", 1, []int{0}, []int{3, 4, 8, 9}, 0, 1, 2, 6},
	130: {"A3", 1, []int{0}, []int{3, 4, 8, 9}, 0, 2, 2, 6},
	131: {"A3", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 1, 2, 6},
	132: {"A3", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 7, 1, 1, 6},
	133: {"B1", 4, []int{1}, []int{9}, 2, 1, 6, 2},
	134: {"B1", 2, []int{1}, []int{9}, 2, 1, 6, 2},
	135: {"B1", 2, []int{1}, []int{7, 9}, 2, 1, 6, 2},
	136: {"B1", 2, []int{1}, []int{4, 9}, 8, 1, 3, 2},
	137: {"B1", 2, []int{1}, []int{4, 9}, 2, 2, 6, 2},
	138: {"B1", 1, []int{0}, []int{9}, 2, 2, 6, 2},
	139: {"B1", 1, []int{0}, []int{9}, 8, 1, 3, 2},
	140: {"B1", 1, []int{0}, []int{9}, 2, 1, 6, 2},
	141: {"B1", 1, []int{0}, []int{8, 9}, 2, 2, 6, 2},
	142: {"B1", 1, []int{0}, []int{4, 9}, 2, 1, 6, 2},
	143: {"B1", 1, []int{0}, []int{7, 9}, 8, 1, 3, 2},
	144: {"B1", 1, []int{0}, []int{1, 3, 5, 7, 9}, 2, 1, 6, 2},
	145: {"B4", 16, []int{1}, []int{9}, 0, 2, 1, 12},
	146: {"B4", 8, []int{1}, []int{9}, 0, 2, 1, 12},
	147: {"B4", 4, []int{1}, []int{9}, 2, 1, 1, 12},
	148: {"B4", 2, []int{1}, []int{9}, 0, 1, 1, 12},
	149: {"B4", 2, []int{1}, []int{9}, 2, 1, 1, 12},
	150: {"B4", 2, []int{1}, []int{7, 9}, 2, 1, 1, 12},
	151: {"B4", 2, []int{1}, []int{4, 9}, 2, 1, 1, 12},
	152: {"B4", 2, []int{1}, []int{4, 9}, 0, 2, 1, 12},
	153: {"B4", 2, []int{1}, []int{8, 9}, 0, 2, 1, 12},
	154: {"B4", 2, []int{1}, []int{2, 3, 4, 7, 8, 9}, 0, 1, 1, 12},
	155: {"B4", 1, []int{0}, []int{1}, 0, 1, 1, 12},
	156: {"B4", 1, []int{0}, []int{2}, 0, 1, 1, 12},
	157: {"B4", 1, []int{0}, []int{4}, 0, 1, 1, 12},
	158: {"B4", 1, []int{0}, []int{7}, 0, 1, 1, 12},
	159: {"B4", 1, []int{0}, []int{9}, 0, 1, 1, 12},
	160: {"B4", 1, []int{0}, []int{9}, 2, 1, 1, 12},
	161: {"B4", 1, []int{0}, []int{9}, 0, 2, 1, 12},
	162: {"B4", 1, []int{0}, []int{4, 9}, 2, 1, 1, 12},
	163: {"B4", 1, []int{0}, []int{7, 9}, 2, 1, 1, 12},
	164: {"B4", 1, []int{0}, []int{8, 9}, 0, 2, 1, 12},
	165: {"B4", 1, []int{0}, []int{3, 4, 8, 9}, 2, 1, 1, 12},
	166: {"B4", 1, []int{0}, []int{1, 3, 5, 7, 9}, 2, 1, 1, 12},
	167: {"B4", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 0, 2, 1, 12},
	168: {"B4", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 2, 1, 1, 12},
	169: {"C0", 16, []int{1}, []int{9}, 2, 2, 6, 2},
	170: {"C0", 8, []int{1}, []int{9}, 2, 2, 6, 2},
	171: {"C0", 4, []int{1}, []int{9}, 2, 1, 6, 2},
	172: {"C0", 2, []int{1}, []int{9}, 2, 1, 6, 2},
	173: {"C0", 2, []int{1}, []int{8, 9}, 2, 2, 6, 2},
	174: {"C0", 2, []int{1}, []int{7, 9}, 2, 1, 6, 2},
	175: {"C0", 2, []int{1}, []int{7, 9}, 8, 1, 3, 2},
	176: {"C0", 2, []int{1}, []int{4, 9}, 8, 1, 3, 2},
	177: {"C0", 2, []int{1}, []int{4, 9}, 2, 2, 6, 2},
	178: {"C0", 2, []int{1}, []int{2, 3, 4, 7, 8, 9}, 2, 1, 6, 2},
	179: {"C0", 1, []int{0}, []int{9}, 2, 2, 6, 2},
	180: {"C0", 1, []int{0}, []int{9}, 8, 1, 3, 2},
	181: {"C0", 1, []int{0}, []int{9}, 2, 1, 6, 2},
	182: {"C0", 1, []int{0}, []int{8, 9}, 2, 2, 6, 2},
	183: {"C0", 1, []int{0}, []int{4, 9}, 2, 1, 6, 2},
	184: {"C0", 1, []int{0}, []int{7, 9}, 8, 1, 3, 2},
	185: {"C0", 1, []int{0}, []int{3, 4, 8, 9}, 2, 1, 6, 2},
	186: {"C0", 1, []int{0}, []int{3, 4, 8, 9}, 2, 2, 6, 2},
	187: {"C0", 1, []int{0}, []int{1, 3, 5, 7, 9}, 2, 1, 6, 2},
	188: {"C0", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 8, 1, 3, 2},
	189: {"C2", 16, []int{1}, []int{9}, 2, 2, 2, 6},
	190: {"C2", 8, []int{1}, []int{9}, 2, 2, 2, 6},
	191: {"C2", 4, []int{1}, []int{9}, 2, 1, 2, 6},
	192: {"C2", 2, []int{1}, []int{9}, 2, 1, 2, 6},
	193: {"C2", 2, []int{1}, []int{8, 9}, 2, 2, 2, 6},
	194: {"C2", 2, []int{1}, []int{7, 9}, 2, 1, 2, 6},
	195: {"C2", 2, []int{1}, []int{7, 9}, 8, 1, 1, 6},
	196: {"C2", 2, []int{1}, []int{4, 9}, 8, 1, 1, 6},
	197: {"C2", 2, []int{1}, []int{4, 9}, 2, 2, 2, 6},
	198: {"C2", 2, []int{1}, []int{2, 3, 4, 7, 8, 9}, 2, 1, 2, 6},
	199: {"C2", 8, []int{1}, []int{9}, 8, 2, 1, 6},
	200: {"C2", 4, []int{1}, []int{9}, 8, 1, 1, 6},
	201: {"C2", 1, []int{0}, []int{9}, 2, 2, 2, 6},
	202: {"C2", 1, []int{0}, []int{9}, 8, 1, 1, 6},
	203: {"C2", 1, []int{0}, []int{9}, 2, 1, 2, 6},
	204: {"C2", 1, []int{0}, []int{8, 9}, 2, 2, 2, 6},
	205: {"C2", 1, []int{0}, []int{4, 9}, 2, 1, 2, 6},
	206: {"C2", 1, []int{0}, []int{7, 9}, 8, 1, 1, 6},
	207: {"C2", 1, []int{0}, []int{3, 4, 8, 9}, 2, 1, 2, 6},
	208: {"C2", 1, []int{0}, []int{3, 4, 8, 9}, 2, 2, 2, 6},
	209: {"C2", 1, []int{0}, []int{1, 3, 5, 7, 9}, 2, 1, 2, 6},
	210: {"C2", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 8, 1, 1, 6},
	211: {"A1/B1", 2, []int{1}, []int{9}, 2, 1, 6, 2},
	212: {"A1/B1", 2, []int{1}, []int{4, 9}, 8, 1, 3, 2},
	213: {"A1/B1", 2, []int{1}, []int{7, 9}, 8, 1, 3, 2},
	214: {"A1/B1", 2, []int{1}, []int{7, 9}, 2, 1, 6, 2},
	215: {"A1/B1", 2, []int{1}, []int{4, 9}, 2, 2, 6, 2},
	216: {"A1/B1", 2, []int{1}, []int{8, 9}, 2, 2, 6, 2},
	217: {"A1/B1", 1, []int{0}, []int{9}, 2, 2, 6, 2},
	218: {"A1/B1", 1, []int{0}, []int{9}, 8, 1, 3, 2},
	219: {"A1/B1", 1, []int{0}, []int{9}, 2, 1, 6, 2},
	220: {"A1/B1", 1, []int{0}, []int{8, 9}, 2, 2, 6, 2},
	221: {"A1/B1", 1, []int{0}, []int{4, 9}, 2, 1, 6, 2},
	222: {"A1/B1", 1, []int{0}, []int{7, 9}, 8, 1, 3, 2},
	223: {"A1/B1", 1, []int{0}, []int{3, 4, 8, 9}, 2, 2, 6, 2},
	224: {"A1/B1", 1, []int{0}, []int{1, 3, 5, 7, 9}, 2, 1, 6, 2},
	225: {"A1/B1", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 8, 1, 3, 2},
	226: {"A2/B2", 2, []int{1}, []int{9}, 0, 1, 3, 4},
	227: {"A2/B2", 2, []int{1}, []int{4, 9}, 6, 1, 2, 4},
	228: {"A2/B2", 2, []int{1}, []int{7, 9}, 6, 1, 2, 4},
	229: {"A2/B2", 2, []int{1}, []int{4, 9}, 0, 2, 3, 4},
	230: {"A2/B2", 2, []int{1}, []int{8, 9}, 0, 2, 3, 4},
	231: {"A2/B2", 1, []int{0}, []int{9}, 0, 2, 3, 4},
	232: {"A2/B2", 1, []int{0}, []int{9}, 6, 1, 2, 4},
	233: {"A2/B2", 1, []int{0}, []int{9}, 0, 1, 3, 4},
	234: {"A2/B2", 1, []int{0}, []int{8, 9}, 0, 2, 3, 4},
	235: {"A2/B2", 1, []int{0}, []int{4, 9}, 0, 1, 3, 4},
	236: {"A2/B2", 1, []int{0}, []int{7, 9}, 6, 1, 2, 4},
	237: {"A2/B2", 1, []int{0}, []int{3, 4, 8, 9}, 0, 1, 3, 4},
	238: {"A2/B2", 1, []int{0}, []int{3, 4, 8, 9}, 0, 2, 3, 4},
	239: {"A2/B2", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 1, 3, 4},
	240: {"A2/B2", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 6, 1, 2, 4},
	241: {"A3/B3", 2, []int{1}, []int{9}, 0, 1, 2, 6},
	242: {"A3/B3", 2, []int{1}, []int{4, 9}, 2, 1, 2, 6},
	243: {"A3/B3", 2, []int{1}, []int{7, 9}, 0, 1, 2, 6},
	244: {"A3/B3", 2, []int{1}, []int{7, 9}, 2, 1, 2, 6},
	245: {"A3/B3", 2, []int{1}, []int{4, 9}, 0, 2, 2, 6},
	246: {"A3/B3", 2, []int{1}, []int{8, 9}, 0, 2, 2, 6},
	247: {"A3/B3", 1, []int{0}, []int{9}, 0, 2, 2, 6},
	248: {"A3/B3", 1, []int{0}, []int{9}, 2, 1, 2, 6},
	249: {"A3/B3", 1, []int{0}, []int{9}, 0, 1, 2, 6},
	250: {"A3/B3", 1, []int{0}, []int{8, 9}, 0, 2, 2, 6},
	251: {"A3/B3", 1, []int{0}, []int{4, 9}, 0, 1, 2, 6},
	252: {"A3/B3", 1, []int{0}, []int{7, 9}, 2, 1, 2, 6},
	253: {"A3/B3", 1, []int{0}, []int{3, 4, 8, 9}, 0, 2, 2, 6},
	254: {"A3/B3", 1, []int{0}, []int{1, 3, 5, 7, 9}, 0, 1, 2, 6},
	255: {"A3/B3", 1, []int{0}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, 2, 1, 2, 6},
}

// PyRange returns a slice similar to python's range.
func PyRange(a, b, step int) []int {
	r := make([]int, 0)
	for i := a; i < b; i += step {
		r = append(r, i)
	}

	return r
}

// refer to 3GPP 38.211 vf30
//  Table 6.3.3.2-4: Random access configurations for FR2 and unpaired spectrum.
var RaCfgFr2Tdd = map[int]RachInfo{
	0:  {"A1", 16, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 6, 2},
	1:  {"A1", 16, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 6, 2},
	2:  {"A1", 8, []int{1, 2}, []int{9, 19, 29, 39}, 0, 2, 6, 2},
	3:  {"A1", 8, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 6, 2},
	4:  {"A1", 8, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 6, 2},
	5:  {"A1", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 6, 2},
	6:  {"A1", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 6, 2},
	7:  {"A1", 4, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 6, 2},
	8:  {"A1", 2, []int{1}, []int{7, 15, 23, 31, 39}, 0, 2, 6, 2},
	9:  {"A1", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 6, 2},
	10: {"A1", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 6, 2},
	11: {"A1", 2, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 6, 2},
	12: {"A1", 1, []int{0}, []int{19, 39}, 7, 1, 3, 2},
	13: {"A1", 1, []int{0}, []int{3, 5, 7}, 0, 1, 6, 2},
	14: {"A1", 1, []int{0}, []int{24, 29, 34, 39}, 7, 1, 3, 2},
	15: {"A1", 1, []int{0}, []int{9, 19, 29, 39}, 7, 2, 3, 2},
	16: {"A1", 1, []int{0}, []int{17, 19, 37, 39}, 0, 1, 6, 2},
	17: {"A1", 1, []int{0}, []int{9, 19, 29, 39}, 0, 2, 6, 2},
	18: {"A1", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 6, 2},
	19: {"A1", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 7, 1, 3, 2},
	20: {"A1", 1, []int{0}, []int{3, 5, 7, 9, 11, 13}, 7, 1, 3, 2},
	21: {"A1", 1, []int{0}, []int{23, 27, 31, 35, 39}, 7, 1, 3, 2},
	22: {"A1", 1, []int{0}, []int{7, 15, 23, 31, 39}, 0, 1, 6, 2},
	23: {"A1", 1, []int{0}, []int{23, 27, 31, 35, 39}, 0, 1, 6, 2},
	24: {"A1", 1, []int{0}, []int{13, 14, 15, 29, 30, 31, 37, 38, 39}, 7, 2, 3, 2},
	25: {"A1", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 7, 1, 3, 2},
	26: {"A1", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 6, 2},
	//27: {"A1", 1, []int{0}, tuple{range{1, 40, 2}}, 0, 1, 6, 2},
	//28: {"A1", 1, []int{0}, tuple{range{40}}, 7, 1, 3, 2},
	27: {"A1", 1, []int{0}, PyRange(1, 40, 2), 0, 1, 6, 2},
	28: {"A1", 1, []int{0}, PyRange(0, 40, 1), 7, 1, 3, 2},
	29: {"A2", 16, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 3, 4},
	30: {"A2", 16, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 3, 4},
	31: {"A2", 8, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 3, 4},
	32: {"A2", 8, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 3, 4},
	33: {"A2", 8, []int{1, 2}, []int{9, 19, 29, 39}, 0, 2, 3, 4},
	34: {"A2", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 3, 4},
	35: {"A2", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 3, 4},
	36: {"A2", 4, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 3, 4},
	37: {"A2", 2, []int{1}, []int{7, 15, 23, 31, 39}, 0, 2, 3, 4},
	38: {"A2", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 3, 4},
	39: {"A2", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 3, 4},
	40: {"A2", 2, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 3, 4},
	41: {"A2", 1, []int{0}, []int{19, 39}, 5, 1, 2, 4},
	42: {"A2", 1, []int{0}, []int{3, 5, 7}, 0, 1, 3, 4},
	43: {"A2", 1, []int{0}, []int{24, 29, 34, 39}, 5, 1, 2, 4},
	44: {"A2", 1, []int{0}, []int{9, 19, 29, 39}, 5, 2, 2, 4},
	45: {"A2", 1, []int{0}, []int{17, 19, 37, 39}, 0, 1, 3, 4},
	46: {"A2", 1, []int{0}, []int{9, 19, 29, 39}, 0, 2, 3, 4},
	47: {"A2", 1, []int{0}, []int{7, 15, 23, 31, 39}, 0, 1, 3, 4},
	48: {"A2", 1, []int{0}, []int{23, 27, 31, 35, 39}, 5, 1, 2, 4},
	49: {"A2", 1, []int{0}, []int{23, 27, 31, 35, 39}, 0, 1, 3, 4},
	50: {"A2", 1, []int{0}, []int{3, 5, 7, 9, 11, 13}, 5, 1, 2, 4},
	51: {"A2", 1, []int{0}, []int{3, 5, 7, 9, 11, 13}, 0, 1, 3, 4},
	52: {"A2", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 5, 1, 2, 4},
	53: {"A2", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 3, 4},
	54: {"A2", 1, []int{0}, []int{13, 14, 15, 29, 30, 31, 37, 38, 39}, 5, 2, 2, 4},
	55: {"A2", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 5, 1, 2, 4},
	56: {"A2", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 3, 4},
	//57: {"A2", 1, []int{0}, tuple{range{1, 40, 2}}, 0, 1, 3, 4},
	//58: {"A2", 1, []int{0}, tuple{range{40}}, 5, 1, 2, 4},
	57: {"A2", 1, []int{0}, PyRange(1, 40, 2), 0, 1, 3, 4},
	58: {"A2", 1, []int{0}, PyRange(0, 40, 1), 5, 1, 2, 4},
	59: {"A3", 16, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 2, 6},
	60: {"A3", 16, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 2, 6},
	61: {"A3", 8, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 2, 6},
	62: {"A3", 8, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 2, 6},
	63: {"A3", 8, []int{1, 2}, []int{9, 19, 29, 39}, 0, 2, 2, 6},
	64: {"A3", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 2, 6},
	65: {"A3", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 2, 6},
	66: {"A3", 4, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 2, 6},
	67: {"A3", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 2, 6},
	68: {"A3", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 2, 6},
	69: {"A3", 2, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 2, 6},
	70: {"A3", 1, []int{0}, []int{19, 39}, 7, 1, 1, 6},
	71: {"A3", 1, []int{0}, []int{3, 5, 7}, 0, 1, 2, 6},
	72: {"A3", 1, []int{0}, []int{9, 11, 13}, 2, 1, 2, 6},
	73: {"A3", 1, []int{0}, []int{24, 29, 34, 39}, 7, 1, 1, 6},
	74: {"A3", 1, []int{0}, []int{9, 19, 29, 39}, 7, 2, 1, 6},
	75: {"A3", 1, []int{0}, []int{17, 19, 37, 39}, 0, 1, 2, 6},
	76: {"A3", 1, []int{0}, []int{9, 19, 29, 39}, 0, 2, 2, 6},
	77: {"A3", 1, []int{0}, []int{7, 15, 23, 31, 39}, 0, 1, 2, 6},
	78: {"A3", 1, []int{0}, []int{23, 27, 31, 35, 39}, 7, 1, 1, 6},
	79: {"A3", 1, []int{0}, []int{23, 27, 31, 35, 39}, 0, 1, 2, 6},
	80: {"A3", 1, []int{0}, []int{3, 5, 7, 9, 11, 13}, 0, 1, 2, 6},
	81: {"A3", 1, []int{0}, []int{3, 5, 7, 9, 11, 13}, 7, 1, 1, 6},
	82: {"A3", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 2, 6},
	83: {"A3", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 7, 1, 1, 6},
	84: {"A3", 1, []int{0}, []int{13, 14, 15, 29, 30, 31, 37, 38, 39}, 7, 2, 1, 6},
	85: {"A3", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 7, 1, 1, 6},
	86: {"A3", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 2, 6},
	//87: {"A3", 1, []int{0}, tuple{range{1, 40, 2}}, 0, 1, 2, 6},
	//88: {"A3", 1, []int{0}, tuple{range{40}}, 7, 1, 1, 6},
	87:  {"A3", 1, []int{0}, PyRange(1, 40, 2), 0, 1, 2, 6},
	88:  {"A3", 1, []int{0}, PyRange(0, 40, 1), 7, 1, 1, 6},
	89:  {"B1", 16, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 2, 6, 2},
	90:  {"B1", 8, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 2, 6, 2},
	91:  {"B1", 8, []int{1, 2}, []int{9, 19, 29, 39}, 2, 2, 6, 2},
	92:  {"B1", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 2, 6, 2},
	93:  {"B1", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 2, 6, 2},
	94:  {"B1", 2, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 6, 2},
	95:  {"B1", 1, []int{0}, []int{19, 39}, 8, 1, 3, 2},
	96:  {"B1", 1, []int{0}, []int{3, 5, 7}, 2, 1, 6, 2},
	97:  {"B1", 1, []int{0}, []int{24, 29, 34, 39}, 8, 1, 3, 2},
	98:  {"B1", 1, []int{0}, []int{9, 19, 29, 39}, 8, 2, 3, 2},
	99:  {"B1", 1, []int{0}, []int{17, 19, 37, 39}, 2, 1, 6, 2},
	100: {"B1", 1, []int{0}, []int{9, 19, 29, 39}, 2, 2, 6, 2},
	101: {"B1", 1, []int{0}, []int{7, 15, 23, 31, 39}, 2, 1, 6, 2},
	102: {"B1", 1, []int{0}, []int{23, 27, 31, 35, 39}, 8, 1, 3, 2},
	103: {"B1", 1, []int{0}, []int{23, 27, 31, 35, 39}, 2, 1, 6, 2},
	104: {"B1", 1, []int{0}, []int{3, 5, 7, 9, 11, 13}, 8, 1, 3, 2},
	105: {"B1", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 8, 1, 3, 2},
	106: {"B1", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 6, 2},
	107: {"B1", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 8, 1, 3, 2},
	108: {"B1", 1, []int{0}, []int{13, 14, 15, 29, 30, 31, 37, 38, 39}, 8, 2, 3, 2},
	109: {"B1", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 6, 2},
	//110: {"B1", 1, []int{0}, tuple{range{1, 40, 2}}, 2, 1, 6, 2},
	//111: {"B1", 1, []int{0}, tuple{range{40}}, 8, 1, 3, 2},
	110: {"B1", 1, []int{0}, PyRange(1, 40, 2), 2, 1, 6, 2},
	111: {"B1", 1, []int{0}, PyRange(0, 40, 1), 8, 1, 3, 2},
	112: {"B4", 16, []int{1, 2}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 1, 12},
	113: {"B4", 16, []int{1, 2}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 1, 12},
	114: {"B4", 8, []int{1, 2}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 1, 12},
	115: {"B4", 8, []int{1, 2}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 1, 12},
	116: {"B4", 8, []int{1, 2}, []int{9, 19, 29, 39}, 0, 2, 1, 12},
	117: {"B4", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 1, 12},
	118: {"B4", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 1, 12},
	119: {"B4", 4, []int{1, 2}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 1, 12},
	120: {"B4", 2, []int{1}, []int{7, 15, 23, 31, 39}, 2, 2, 1, 12},
	121: {"B4", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 1, 12},
	122: {"B4", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 1, 12},
	123: {"B4", 2, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 1, 12},
	124: {"B4", 1, []int{0}, []int{19, 39}, 2, 2, 1, 12},
	125: {"B4", 1, []int{0}, []int{17, 19, 37, 39}, 0, 1, 1, 12},
	126: {"B4", 1, []int{0}, []int{24, 29, 34, 39}, 2, 1, 1, 12},
	127: {"B4", 1, []int{0}, []int{9, 19, 29, 39}, 2, 2, 1, 12},
	128: {"B4", 1, []int{0}, []int{9, 19, 29, 39}, 0, 2, 1, 12},
	129: {"B4", 1, []int{0}, []int{7, 15, 23, 31, 39}, 0, 1, 1, 12},
	130: {"B4", 1, []int{0}, []int{7, 15, 23, 31, 39}, 0, 2, 1, 12},
	131: {"B4", 1, []int{0}, []int{23, 27, 31, 35, 39}, 0, 1, 1, 12},
	132: {"B4", 1, []int{0}, []int{23, 27, 31, 35, 39}, 2, 2, 1, 12},
	133: {"B4", 1, []int{0}, []int{9, 11, 13, 15, 17, 19}, 0, 1, 1, 12},
	134: {"B4", 1, []int{0}, []int{3, 5, 7, 9, 11, 13}, 2, 1, 1, 12},
	135: {"B4", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 1, 12},
	136: {"B4", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 2, 1, 12},
	137: {"B4", 1, []int{0}, []int{13, 14, 15, 29, 30, 31, 37, 38, 39}, 2, 2, 1, 12},
	138: {"B4", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 1, 12},
	139: {"B4", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 1, 12},
	//140: {"B4", 1, []int{0}, tuple{range{3, 26, 2}}, 2, 1, 1, 12},
	//141: {"B4", 1, []int{0}, tuple{range{3, 26, 2}}, 0, 2, 1, 12},
	//142: {"B4", 1, []int{0}, tuple{range{1, 40, 2}}, 0, 1, 1, 12},
	//143: {"B4", 1, []int{0}, tuple{range{40}}, 2, 1, 1, 12},
	140: {"B4", 1, []int{0}, PyRange(3, 26, 2), 2, 1, 1, 12},
	141: {"B4", 1, []int{0}, PyRange(3, 26, 2), 0, 2, 1, 12},
	142: {"B4", 1, []int{0}, PyRange(1, 40, 2), 0, 1, 1, 12},
	143: {"B4", 1, []int{0}, PyRange(0, 40, 1), 2, 1, 1, 12},
	144: {"C0", 16, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 7, 2},
	145: {"C0", 16, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 7, 2},
	146: {"C0", 8, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 7, 2},
	147: {"C0", 8, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 7, 2},
	148: {"C0", 8, []int{1, 2}, []int{9, 19, 29, 39}, 0, 2, 7, 2},
	149: {"C0", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 7, 2},
	150: {"C0", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 7, 2},
	151: {"C0", 4, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 7, 2},
	152: {"C0", 2, []int{1}, []int{7, 15, 23, 31, 39}, 0, 2, 7, 2},
	153: {"C0", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 7, 2},
	154: {"C0", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 7, 2},
	155: {"C0", 2, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 7, 2},
	156: {"C0", 1, []int{0}, []int{19, 39}, 8, 1, 3, 2},
	157: {"C0", 1, []int{0}, []int{3, 5, 7}, 0, 1, 7, 2},
	158: {"C0", 1, []int{0}, []int{24, 29, 34, 39}, 8, 1, 3, 2},
	159: {"C0", 1, []int{0}, []int{9, 19, 29, 39}, 8, 2, 3, 2},
	160: {"C0", 1, []int{0}, []int{17, 19, 37, 39}, 0, 1, 7, 2},
	161: {"C0", 1, []int{0}, []int{9, 19, 29, 39}, 0, 2, 7, 2},
	162: {"C0", 1, []int{0}, []int{23, 27, 31, 35, 39}, 8, 1, 3, 2},
	163: {"C0", 1, []int{0}, []int{7, 15, 23, 31, 39}, 0, 1, 7, 2},
	164: {"C0", 1, []int{0}, []int{23, 27, 31, 35, 39}, 0, 1, 7, 2},
	165: {"C0", 1, []int{0}, []int{3, 5, 7, 9, 11, 13}, 8, 1, 3, 2},
	166: {"C0", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 8, 1, 3, 2},
	167: {"C0", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 7, 2},
	168: {"C0", 1, []int{0}, []int{13, 14, 15, 29, 30, 31, 37, 38, 39}, 8, 2, 3, 2},
	169: {"C0", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 8, 1, 3, 2},
	170: {"C0", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 7, 2},
	//171: {"C0", 1, []int{0}, tuple{range{1, 40, 2}}, 0, 1, 7, 2},
	//172: {"C0", 1, []int{0}, tuple{range{40}}, 8, 1, 3, 2},
	171: {"C0", 1, []int{0}, PyRange(1, 40, 2), 0, 1, 7, 2},
	172: {"C0", 1, []int{0}, PyRange(0, 40, 1), 8, 1, 3, 2},
	173: {"C2", 16, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 2, 6},
	174: {"C2", 16, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 2, 6},
	175: {"C2", 8, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 2, 6},
	176: {"C2", 8, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 2, 6},
	177: {"C2", 8, []int{1, 2}, []int{9, 19, 29, 39}, 0, 2, 2, 6},
	178: {"C2", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 2, 6},
	179: {"C2", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 2, 6},
	180: {"C2", 4, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 2, 6},
	181: {"C2", 2, []int{1}, []int{7, 15, 23, 31, 39}, 2, 2, 2, 6},
	182: {"C2", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 1, 2, 6},
	183: {"C2", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 0, 2, 2, 6},
	184: {"C2", 2, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 2, 6},
	185: {"C2", 1, []int{0}, []int{19, 39}, 2, 1, 2, 6},
	186: {"C2", 1, []int{0}, []int{3, 5, 7}, 0, 1, 2, 6},
	187: {"C2", 1, []int{0}, []int{24, 29, 34, 39}, 7, 1, 1, 6},
	188: {"C2", 1, []int{0}, []int{9, 19, 29, 39}, 7, 2, 1, 6},
	189: {"C2", 1, []int{0}, []int{17, 19, 37, 39}, 0, 1, 2, 6},
	190: {"C2", 1, []int{0}, []int{9, 19, 29, 39}, 2, 2, 2, 6},
	191: {"C2", 1, []int{0}, []int{7, 15, 23, 31, 39}, 2, 1, 2, 6},
	192: {"C2", 1, []int{0}, []int{3, 5, 7, 9, 11, 13}, 7, 1, 1, 6},
	193: {"C2", 1, []int{0}, []int{23, 27, 31, 35, 39}, 7, 2, 1, 6},
	194: {"C2", 1, []int{0}, []int{23, 27, 31, 35, 39}, 0, 1, 2, 6},
	195: {"C2", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 7, 2, 1, 6},
	196: {"C2", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 2, 6},
	197: {"C2", 1, []int{0}, []int{13, 14, 15, 29, 30, 31, 37, 38, 39}, 7, 2, 1, 6},
	198: {"C2", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 7, 1, 1, 6},
	199: {"C2", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 0, 1, 2, 6},
	//200: {"C2", 1, []int{0}, tuple{range{1, 40, 2}}, 0, 1, 2, 6},
	//201: {"C2", 1, []int{0}, tuple{range{40}}, 7, 1, 1, 6},
	200: {"C2", 1, []int{0}, PyRange(1, 40, 2), 0, 1, 2, 6},
	201: {"C2", 1, []int{0}, PyRange(0, 40, 1), 7, 1, 1, 6},
	202: {"A1/B1", 16, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 6, 2},
	203: {"A1/B1", 16, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 6, 2},
	204: {"A1/B1", 8, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 6, 2},
	205: {"A1/B1", 8, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 6, 2},
	206: {"A1/B1", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 6, 2},
	207: {"A1/B1", 4, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 6, 2},
	208: {"A1/B1", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 6, 2},
	209: {"A1/B1", 1, []int{0}, []int{19, 39}, 8, 1, 3, 2},
	210: {"A1/B1", 1, []int{0}, []int{9, 19, 29, 39}, 8, 1, 3, 2},
	211: {"A1/B1", 1, []int{0}, []int{17, 19, 37, 39}, 2, 1, 6, 2},
	212: {"A1/B1", 1, []int{0}, []int{9, 19, 29, 39}, 2, 2, 6, 2},
	213: {"A1/B1", 1, []int{0}, []int{23, 27, 31, 35, 39}, 8, 1, 3, 2},
	214: {"A1/B1", 1, []int{0}, []int{7, 15, 23, 31, 39}, 2, 1, 6, 2},
	215: {"A1/B1", 1, []int{0}, []int{23, 27, 31, 35, 39}, 2, 1, 6, 2},
	216: {"A1/B1", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 8, 1, 3, 2},
	217: {"A1/B1", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 6, 2},
	218: {"A1/B1", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 6, 2},
	//219: {"A1/B1", 1, []int{0}, tuple{range{1, 40, 2}}, 2, 1, 6, 2},
	219: {"A1/B1", 1, []int{0}, PyRange(1, 40, 2), 2, 1, 6, 2},
	220: {"A2/B2", 16, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 3, 4},
	221: {"A2/B2", 16, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 3, 4},
	222: {"A2/B2", 8, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 3, 4},
	223: {"A2/B2", 8, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 3, 4},
	224: {"A2/B2", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 3, 4},
	225: {"A2/B2", 4, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 3, 4},
	226: {"A2/B2", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 3, 4},
	227: {"A2/B2", 1, []int{0}, []int{19, 39}, 6, 1, 2, 4},
	228: {"A2/B2", 1, []int{0}, []int{9, 19, 29, 39}, 6, 1, 2, 4},
	229: {"A2/B2", 1, []int{0}, []int{17, 19, 37, 39}, 2, 1, 3, 4},
	230: {"A2/B2", 1, []int{0}, []int{9, 19, 29, 39}, 2, 2, 3, 4},
	231: {"A2/B2", 1, []int{0}, []int{23, 27, 31, 35, 39}, 6, 1, 2, 4},
	232: {"A2/B2", 1, []int{0}, []int{7, 15, 23, 31, 39}, 2, 1, 3, 4},
	233: {"A2/B2", 1, []int{0}, []int{23, 27, 31, 35, 39}, 2, 1, 3, 4},
	234: {"A2/B2", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 6, 1, 2, 4},
	235: {"A2/B2", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 3, 4},
	236: {"A2/B2", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 3, 4},
	//237: {"A2/B2", 1, []int{0}, tuple{range{1, 40, 2}}, 2, 1, 3, 4},
	237: {"A2/B2", 1, []int{0}, PyRange(1, 40, 2), 2, 1, 3, 4},
	238: {"A3/B3", 16, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 2, 6},
	239: {"A3/B3", 16, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 2, 6},
	240: {"A3/B3", 8, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 2, 6},
	241: {"A3/B3", 8, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 2, 6},
	242: {"A3/B3", 4, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 2, 6},
	243: {"A3/B3", 4, []int{1}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 2, 6},
	244: {"A3/B3", 2, []int{1}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 2, 6},
	245: {"A3/B3", 1, []int{0}, []int{19, 39}, 2, 1, 2, 6},
	246: {"A3/B3", 1, []int{0}, []int{9, 19, 29, 39}, 2, 1, 2, 6},
	247: {"A3/B3", 1, []int{0}, []int{17, 19, 37, 39}, 2, 1, 2, 6},
	248: {"A3/B3", 1, []int{0}, []int{9, 19, 29, 39}, 2, 2, 2, 6},
	249: {"A3/B3", 1, []int{0}, []int{7, 15, 23, 31, 39}, 2, 1, 2, 6},
	250: {"A3/B3", 1, []int{0}, []int{23, 27, 31, 35, 39}, 2, 1, 2, 6},
	251: {"A3/B3", 1, []int{0}, []int{23, 27, 31, 35, 39}, 2, 2, 2, 6},
	252: {"A3/B3", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 1, 2, 6},
	253: {"A3/B3", 1, []int{0}, []int{4, 9, 14, 19, 24, 29, 34, 39}, 2, 2, 2, 6},
	254: {"A3/B3", 1, []int{0}, []int{3, 7, 11, 15, 19, 23, 27, 31, 35, 39}, 2, 1, 2, 6},
	//255: {"A3/B3", 1, []int{0}, tuple{range{1, 40, 2}}, 2, 1, 2, 6},
	255: {"A3/B3", 1, []int{0}, PyRange(1, 40, 2), 2, 1, 2, 6},
}

// TimeAllocInfo contains information of PDSCH/PUSCH time-domain allocation.
type TimeAllocInfo struct {
	MappingType string
	K0          int
	S           int
	L           int
}

// refer to 3GPP 38.214 vf30
//  Table 5.1.2.1.1-2: Default PDSCH time domain resource allocation A for normal CP
var PdschTimeAllocDefANormCp = map[string]TimeAllocInfo{
	"1_2":  {"Type A", 0, 2, 12},
	"1_3":  {"Type A", 0, 3, 11},
	"2_2":  {"Type A", 0, 2, 10},
	"2_3":  {"Type A", 0, 3, 9},
	"3_2":  {"Type A", 0, 2, 9},
	"3_3":  {"Type A", 0, 3, 8},
	"4_2":  {"Type A", 0, 2, 7},
	"4_3":  {"Type A", 0, 3, 6},
	"5_2":  {"Type A", 0, 2, 5},
	"5_3":  {"Type A", 0, 3, 4},
	"6_2":  {"Type B", 0, 9, 4},
	"6_3":  {"Type B", 0, 10, 4},
	"7_2":  {"Type B", 0, 4, 4},
	"7_3":  {"Type B", 0, 6, 4},
	"8_2":  {"Type B", 0, 5, 7},
	"9_2":  {"Type B", 0, 5, 2},
	"10_2": {"Type B", 0, 9, 2},
	"11_2": {"Type B", 0, 12, 2},
	"12_2": {"Type A", 0, 1, 13},
	"13_2": {"Type A", 0, 1, 6},
	"14_2": {"Type A", 0, 2, 4},
	"15_2": {"Type B", 0, 4, 7},
	"16_2": {"Type B", 0, 8, 4},
	"8_3":  {"Type B", 0, 5, 7},
	"9_3":  {"Type B", 0, 5, 2},
	"10_3": {"Type B", 0, 9, 2},
	"11_3": {"Type B", 0, 12, 2},
	"12_3": {"Type A", 0, 1, 13},
	"13_3": {"Type A", 0, 1, 6},
	"14_3": {"Type A", 0, 2, 4},
	"15_3": {"Type B", 0, 4, 7},
	"16_3": {"Type B", 0, 8, 4},
}

// refer to 3GPP 38.214 vf30
//  Table 5.1.2.1.1-3: Default PDSCH time domain resource allocation A for extended CP
var PdschTimeAllocDefAExtCp = map[string]TimeAllocInfo{
	"1_2":  {"Type A", 0, 2, 6},
	"1_3":  {"Type A", 0, 3, 5},
	"2_2":  {"Type A", 0, 2, 10},
	"2_3":  {"Type A", 0, 3, 9},
	"3_2":  {"Type A", 0, 2, 9},
	"3_3":  {"Type A", 0, 3, 8},
	"4_2":  {"Type A", 0, 2, 7},
	"4_3":  {"Type A", 0, 3, 6},
	"5_2":  {"Type A", 0, 2, 5},
	"5_3":  {"Type A", 0, 3, 4},
	"6_2":  {"Type B", 0, 6, 4},
	"6_3":  {"Type B", 0, 8, 2},
	"7_2":  {"Type B", 0, 4, 4},
	"7_3":  {"Type B", 0, 6, 4},
	"8_2":  {"Type B", 0, 5, 6},
	"9_2":  {"Type B", 0, 5, 2},
	"10_2": {"Type B", 0, 9, 2},
	"11_2": {"Type B", 0, 10, 2},
	"12_2": {"Type A", 0, 1, 11},
	"13_2": {"Type A", 0, 1, 6},
	"14_2": {"Type A", 0, 2, 4},
	"15_2": {"Type B", 0, 4, 6},
	"16_2": {"Type B", 0, 8, 4},
	"8_3":  {"Type B", 0, 5, 6},
	"9_3":  {"Type B", 0, 5, 2},
	"10_3": {"Type B", 0, 9, 2},
	"11_3": {"Type B", 0, 10, 2},
	"12_3": {"Type A", 0, 1, 11},
	"13_3": {"Type A", 0, 1, 6},
	"14_3": {"Type A", 0, 2, 4},
	"15_3": {"Type B", 0, 4, 6},
	"16_3": {"Type B", 0, 8, 4},
}

// refer to 3GPP 38.214 vf30
//  Table 5.1.2.1.1-4: Default PDSCH time domain resource allocation B
var PdschTimeAllocDefB = map[string]TimeAllocInfo{
	"1_2":  {"Type B", 0, 2, 2},
	"2_2":  {"Type B", 0, 4, 2},
	"3_2":  {"Type B", 0, 6, 2},
	"4_2":  {"Type B", 0, 8, 2},
	"5_2":  {"Type B", 0, 10, 2},
	"6_2":  {"Type B", 1, 2, 2},
	"7_2":  {"Type B", 1, 4, 2},
	"8_2":  {"Type B", 0, 2, 4},
	"9_2":  {"Type B", 0, 4, 4},
	"10_2": {"Type B", 0, 6, 4},
	"11_2": {"Type B", 0, 8, 4},
	"12_2": {"Type B", 0, 10, 4},
	"13_2": {"Type B", 0, 2, 7},
	"14_2": {"Type A", 0, 2, 12},
	"14_3": {"Type A", 0, 3, 11},
	"15_2": {"Type B", 1, 2, 4},
	"1_3":  {"Type B", 0, 2, 2},
	"2_3":  {"Type B", 0, 4, 2},
	"3_3":  {"Type B", 0, 6, 2},
	"4_3":  {"Type B", 0, 8, 2},
	"5_3":  {"Type B", 0, 10, 2},
	"6_3":  {"Type B", 1, 2, 2},
	"7_3":  {"Type B", 1, 4, 2},
	"8_3":  {"Type B", 0, 2, 4},
	"9_3":  {"Type B", 0, 4, 4},
	"10_3": {"Type B", 0, 6, 4},
	"11_3": {"Type B", 0, 8, 4},
	"12_3": {"Type B", 0, 10, 4},
	"13_3": {"Type B", 0, 2, 7},
	"15_3": {"Type B", 1, 2, 4},
}

// refer to 3GPP 38.214 vf30
//  Table 5.1.2.1.1-4: Default PDSCH time domain resource allocation B
// Note 1: If the PDSCH was scheduled with SI-RNTI in PDCCH Type0 common search space, the UE may assume that this PDSCH resource allocation is not applied
var PdschTimeAllocDefBNote1Set = []int{12, 13, 14}

// refer to 3GPP 38.214 vf30
//  Table 5.1.2.1.1-5: Default PDSCH time domain resource allocation C
var PdschTimeAllocDefC = map[string]TimeAllocInfo{
	"1_2":  {"Type B", 0, 2, 2},
	"2_2":  {"Type B", 0, 4, 2},
	"3_2":  {"Type B", 0, 6, 2},
	"4_2":  {"Type B", 0, 8, 2},
	"5_2":  {"Type B", 0, 10, 2},
	"8_2":  {"Type B", 0, 2, 4},
	"9_2":  {"Type B", 0, 4, 4},
	"10_2": {"Type B", 0, 6, 4},
	"11_2": {"Type B", 0, 8, 4},
	"12_2": {"Type B", 0, 10, 4},
	"13_2": {"Type B", 0, 2, 7},
	"14_2": {"Type A", 0, 2, 12},
	"14_3": {"Type A", 0, 3, 11},
	"15_2": {"Type A", 0, 0, 6},
	"16_2": {"Type A", 0, 2, 6},
	"1_3":  {"Type B", 0, 2, 2},
	"2_3":  {"Type B", 0, 4, 2},
	"3_3":  {"Type B", 0, 6, 2},
	"4_3":  {"Type B", 0, 8, 2},
	"5_3":  {"Type B", 0, 10, 2},
	"8_3":  {"Type B", 0, 2, 4},
	"9_3":  {"Type B", 0, 4, 4},
	"10_3": {"Type B", 0, 6, 4},
	"11_3": {"Type B", 0, 8, 4},
	"12_3": {"Type B", 0, 10, 4},
	"13_3": {"Type B", 0, 2, 7},
	"15_3": {"Type A", 0, 0, 6},
	"16_3": {"Type A", 0, 2, 6},
}

// refer to 3GPP 38.214 vf30
//  Table 5.1.2.1.1-5: Default PDSCH time domain resource allocation C
// Note 1: The UE may assume that this PDSCH resource allocation is not used, if the PDSCH was scheduled with SI-RNTI in PDCCH Type0 common search spac
var PdschTimeAllocDefCNote1Set = []int{1, 13, 14, 15, 16}

// refer to 3GPP 38.214 vf30
//  Table 6.1.2.1.1-2: Default PUSCH time domain resource allocation A for normal CP
var PuschTimeAllocDefANormCp = map[int]TimeAllocInfo{
	1:  {"Type A", 0, 0, 14},
	2:  {"Type A", 0, 0, 12},
	3:  {"Type A", 0, 0, 10},
	4:  {"Type B", 0, 2, 10},
	5:  {"Type B", 0, 4, 10},
	6:  {"Type B", 0, 4, 8},
	7:  {"Type B", 0, 4, 6},
	8:  {"Type A", 1, 0, 14},
	9:  {"Type A", 1, 0, 12},
	10: {"Type A", 1, 0, 10},
	11: {"Type A", 2, 0, 14},
	12: {"Type A", 2, 0, 12},
	13: {"Type A", 2, 0, 10},
	14: {"Type B", 0, 8, 6},
	15: {"Type A", 3, 0, 14},
	16: {"Type A", 3, 0, 10},
}

// refer to 3GPP 38.214 vf30
//  Table 6.1.2.1.1-3: Default PUSCH time domain resource allocation A for extended CP
var PuschTimeAllocDefAExtCp = map[int]TimeAllocInfo{
	1:  {"Type A", 0, 0, 8},
	2:  {"Type A", 0, 0, 12},
	3:  {"Type A", 0, 0, 10},
	4:  {"Type B", 0, 2, 10},
	5:  {"Type B", 0, 4, 4},
	6:  {"Type B", 0, 4, 8},
	7:  {"Type B", 0, 4, 6},
	8:  {"Type A", 1, 0, 8},
	9:  {"Type A", 1, 0, 12},
	10: {"Type A", 1, 0, 10},
	11: {"Type A", 2, 0, 6},
	12: {"Type A", 2, 0, 12},
	13: {"Type A", 2, 0, 10},
	14: {"Type B", 0, 8, 4},
	15: {"Type A", 3, 0, 8},
	16: {"Type A", 3, 0, 10},
}

// refer to 3GPP 38.214 vf30
//  Table 6.1.2.1.1-4: Definition of value j
var PuschTimeAllocK2j = map[string]int{
	"15KHz":  1,
	"30KHz":  1,
	"60KHz":  2,
	"120KHz": 3,
}

// refer to 3GPP 38.214 vf30
//  Table 6.1.2.1.1-5: Definition of value Δ
var PuschTimeAllocMsg3K2Delta = map[string]int{
	"15KHz":  2,
	"30KHz":  3,
	"60KHz":  4,
	"120KHz": 6,
}

// McsInfo indicates the modulation order and the coding rate(x1024) of each MCS.
type McsInfo struct {
	ModOrder int
	CodeRate float64
}

// refer to 3GPP 38.214 vf30
//  Table 5.1.3.1-1: MCS index table 1 for PDSCH
var PdschMcsTabQam64 = map[int]McsInfo{
	0:  {2, 120},
	1:  {2, 157},
	2:  {2, 193},
	3:  {2, 251},
	4:  {2, 308},
	5:  {2, 379},
	6:  {2, 449},
	7:  {2, 526},
	8:  {2, 602},
	9:  {2, 679},
	10: {4, 340},
	11: {4, 378},
	12: {4, 434},
	13: {4, 490},
	14: {4, 553},
	15: {4, 616},
	16: {4, 658},
	17: {6, 438},
	18: {6, 466},
	19: {6, 517},
	20: {6, 567},
	21: {6, 616},
	22: {6, 666},
	23: {6, 719},
	24: {6, 772},
	25: {6, 822},
	26: {6, 873},
	27: {6, 910},
	28: {6, 948},
	29: nil,
	30: nil,
	31: nil,
}

// refer to 3GPP 38.214 vf30
//  Table 5.1.3.1-2: MCS index table 2 for PDSCH
var PdschMcsTabQam256 = map[int]McsInfo{
	0:  {2, 120},
	1:  {2, 193},
	2:  {2, 308},
	3:  {2, 449},
	4:  {2, 602},
	5:  {4, 378},
	6:  {4, 434},
	7:  {4, 490},
	8:  {4, 553},
	9:  {4, 616},
	10: {4, 658},
	11: {6, 466},
	12: {6, 517},
	13: {6, 567},
	14: {6, 616},
	15: {6, 666},
	16: {6, 719},
	17: {6, 772},
	18: {6, 822},
	19: {6, 873},
	20: {8, 682.5},
	21: {8, 711},
	22: {8, 754},
	23: {8, 797},
	24: {8, 841},
	25: {8, 885},
	26: {8, 916.5},
	27: {8, 948},
	28: nil,
	29: nil,
	30: nil,
	31: nil,
}

// refer to 3GPP 38.214 vf30
//  Table 5.1.3.1-3: MCS index table 3 for PDSCH
var PdschMcsTabQam64LowSE = map[int]McsInfo{
	0:  {2, 30},
	1:  {2, 40},
	2:  {2, 50},
	3:  {2, 64},
	4:  {2, 78},
	5:  {2, 99},
	6:  {2, 120},
	7:  {2, 157},
	8:  {2, 193},
	9:  {2, 251},
	10: {2, 308},
	11: {2, 379},
	12: {2, 449},
	13: {2, 526},
	14: {2, 602},
	15: {4, 340},
	16: {4, 378},
	17: {4, 434},
	18: {4, 490},
	19: {4, 553},
	20: {4, 616},
	21: {6, 438},
	22: {6, 466},
	23: {6, 517},
	24: {6, 567},
	25: {6, 616},
	26: {6, 666},
	27: {6, 719},
	28: {6, 772},
	29: nil,
	30: nil,
	31: nil,
}

// refer to 3GPP 38.214 vf30
//  Table 5.1.3.2-1: TBS for N_info <= 3824
var TbsTabLessThan3824 = []float64{24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168,
	176, 184, 192, 208, 224, 240, 256, 272, 288, 304, 320, 336, 352, 368, 384, 408, 432, 456, 480, 504, 528, 552, 576,
	608, 640, 672, 704, 736, 768, 808, 848, 888, 928, 984, 1032, 1064, 1128, 1160, 1192, 1224, 1256, 1288, 1320, 1352,
	1416, 1480, 1544, 1608, 1672, 1736, 1800, 1864, 1928, 2024, 2088, 2152, 2216, 2280, 2408, 2472, 2536, 2600, 2664,
	2728, 2792, 2856, 2976, 3104, 3240, 3368, 3496, 3624, 3752, 3824}

// refer to 3GPP 38.214 vf30
//  Table 6.1.4.1-1: MCS index table for PUSCH with transform precoding and 64QAM
var PuschTpMcsTabQam64 = map[int]McsInfo{
	0:  {2, 120},
	1:  {2, 157},
	2:  {2, 193},
	3:  {2, 251},
	4:  {2, 308},
	5:  {2, 379},
	6:  {2, 449},
	7:  {2, 526},
	8:  {2, 602},
	9:  {2, 679},
	10: {4, 340},
	11: {4, 378},
	12: {4, 434},
	13: {4, 490},
	14: {4, 553},
	15: {4, 616},
	16: {4, 658},
	17: {6, 466},
	18: {6, 517},
	19: {6, 567},
	20: {6, 616},
	21: {6, 666},
	22: {6, 719},
	23: {6, 772},
	24: {6, 822},
	25: {6, 873},
	26: {6, 910},
	27: {6, 948},
	28: nil,
	29: nil,
	30: nil,
	31: nil,
}

// refer to 3GPP 38.214 vf30
// Table 6.1.4.1-2: MCS index table 2 for PUSCH with transform precoding and 64QAM
var PuschTpMcsTabQam64LowSE = map[int]McsInfo{
	0:  {2, 120},
	1:  {2, 157},
	2:  {2, 193},
	3:  {2, 251},
	4:  {2, 308},
	5:  {2, 379},
	6:  {2, 449},
	7:  {2, 526},
	8:  {2, 602},
	9:  {2, 679},
	10: {4, 340},
	11: {4, 378},
	12: {4, 434},
	13: {4, 490},
	14: {4, 553},
	15: {4, 616},
	16: {4, 658},
	17: {6, 466},
	18: {6, 517},
	19: {6, 567},
	20: {6, 616},
	21: {6, 666},
	22: {6, 719},
	23: {6, 772},
	24: {6, 822},
	25: {6, 873},
	26: {6, 910},
	27: {6, 948},
	28: nil,
	29: nil,
	30: nil,
	31: nil,
}

// AntPortsInfo contains information of the 'Antenna Ports' field of DCI01/DCI11
type AntPortsInfo struct {
	CdmGroups    int
	DmrsPorts    []int
	NumDmrsSymbs int
}

// refer to 3GPP 38.212 vf30
//  Table 7.3.1.2.2-1: Antenna port(s) (1000 + DMRS port), dmrs-Type=1, maxLength=1
var Dci11AntPortsDmrsType1MaxLen1OneCw = map[int]AntPortsInfo{
	0:  {1, []int{0}, 1},
	1:  {1, []int{1}, 1},
	2:  {1, []int{0, 1}, 1},
	3:  {2, []int{0}, 1},
	4:  {2, []int{1}, 1},
	5:  {2, []int{2}, 1},
	6:  {2, []int{3}, 1},
	7:  {2, []int{0, 1}, 1},
	8:  {2, []int{2, 3}, 1},
	9:  {2, []int{0, 1, 2}, 1},
	10: {2, []int{0, 1, 2, 3}, 1},
	11: {2, []int{0, 2}, 1},
	12: nil,
	13: nil,
	14: nil,
	15: nil,
}

// Valid keys of Dci11AntPortsDmrsType1MaxLen1OneCw.
var Dci11AntPortsDmrsType1MaxLen1OneCwValid = "0-11"

// refer to 3GPP 38.212 vf30
//  Table 7.3.1.2.2-2: Antenna port(s) (1000 + DMRS port), dmrs-Type=1, maxLength=2
var Dci11AntPortsDmrsType1MaxLen2OneCw = map[int]AntPortsInfo{
	0:  {1, []int{0}, 1},
	1:  {1, []int{1}, 1},
	2:  {1, []int{0, 1}, 1},
	3:  {2, []int{0}, 1},
	4:  {2, []int{1}, 1},
	5:  {2, []int{2}, 1},
	6:  {2, []int{3}, 1},
	7:  {2, []int{0, 1}, 1},
	8:  {2, []int{2, 3}, 1},
	9:  {2, []int{0, 1, 2}, 1},
	10: {2, []int{0, 1, 2, 3}, 1},
	11: {2, []int{0, 2}, 1},
	12: {2, []int{0}, 2},
	13: {2, []int{1}, 2},
	14: {2, []int{2}, 2},
	15: {2, []int{3}, 2},
	16: {2, []int{4}, 2},
	17: {2, []int{5}, 2},
	18: {2, []int{6}, 2},
	19: {2, []int{7}, 2},
	20: {2, []int{0, 1}, 2},
	21: {2, []int{2, 3}, 2},
	22: {2, []int{4, 5}, 2},
	23: {2, []int{6, 7}, 2},
	24: {2, []int{0, 4}, 2},
	25: {2, []int{2, 6}, 2},
	26: {2, []int{0, 1, 4}, 2},
	27: {2, []int{2, 3, 6}, 2},
	28: {2, []int{0, 1, 4, 5}, 2},
	29: {2, []int{2, 3, 6, 7}, 2},
	30: {2, []int{0, 2, 4, 6}, 2},
	31: nil,
}

// Valid keys of Dci11AntPortsDmrsType1MaxLen2OneCw.
var Dci11AntPortsDmrsType1MaxLen2OneCwValid = "0-30"

// refer to 3GPP 38.212 vf30
//  Table 7.3.1.2.2-2: Antenna port(s) (1000 + DMRS port), dmrs-Type=1, maxLength=2
var Dci11AntPortsDmrsType1MaxLen2TwoCws = map[int]AntPortsInfo{
	0:  {2, []int{0, 1, 2, 3, 4}, 2},
	1:  {2, []int{0, 1, 2, 3, 4, 6}, 2},
	2:  {2, []int{0, 1, 2, 3, 4, 5, 6}, 2},
	3:  {2, []int{0, 1, 2, 3, 4, 5, 6, 7}, 2},
	4:  nil,
	5:  nil,
	6:  nil,
	7:  nil,
	8:  nil,
	9:  nil,
	10: nil,
	11: nil,
	12: nil,
	13: nil,
	14: nil,
	15: nil,
	16: nil,
	17: nil,
	18: nil,
	19: nil,
	20: nil,
	21: nil,
	22: nil,
	23: nil,
	24: nil,
	25: nil,
	26: nil,
	27: nil,
	28: nil,
	29: nil,
	30: nil,
	31: nil,
}

// Valid keys of Dci11AntPortsDmrsType1MaxLen2TwoCws.
var Dci11AntPortsDmrsType1MaxLen2TwoCwsValid = "0-3"

// refer to 3GPP 38.212 vf30
//  Table 7.3.1.2.2-3: Antenna port(s) (1000 + DMRS port), dmrs-Type=2, maxLength=1
var Dci11AntPortsDmrsType2MaxLen1OneCw = map[int]AntPortsInfo{
	0:  {1, []int{0}, 1},
	1:  {1, []int{1}, 1},
	2:  {1, []int{0, 1}, 1},
	3:  {2, []int{0}, 1},
	4:  {2, []int{1}, 1},
	5:  {2, []int{2}, 1},
	6:  {2, []int{3}, 1},
	7:  {2, []int{0, 1}, 1},
	8:  {2, []int{2, 3}, 1},
	9:  {2, []int{0, 1, 2}, 1},
	10: {2, []int{0, 1, 2, 3}, 1},
	11: {3, []int{0}, 1},
	12: {3, []int{1}, 1},
	13: {3, []int{2}, 1},
	14: {3, []int{3}, 1},
	15: {3, []int{4}, 1},
	16: {3, []int{5}, 1},
	17: {3, []int{0, 1}, 1},
	18: {3, []int{2, 3}, 1},
	19: {3, []int{4, 5}, 1},
	20: {3, []int{0, 1, 2}, 1},
	21: {3, []int{3, 4, 5}, 1},
	22: {3, []int{0, 1, 2, 3}, 1},
	23: {2, []int{0, 2}, 1},
	24: nil,
	25: nil,
	26: nil,
	27: nil,
	28: nil,
	29: nil,
	30: nil,
	31: nil,
}

// Valid keys of Dci11AntPortsDmrsType2MaxLen1OneCw.
var Dci11AntPortsDmrsType2MaxLen1OneCwValid = "0-23"

// refer to 3GPP 38.212 vf30
//  Table 7.3.1.2.2-3: Antenna port(s) (1000 + DMRS port), dmrs-Type=2, maxLength=1
var Dci11AntPortsDmrsType2MaxLen1TwoCws = map[int]AntPortsInfo{
	0:  {3, []int{0, 1, 2, 3, 4}, 1},
	1:  {3, []int{0, 1, 2, 3, 4, 5}, 1},
	2:  nil,
	3:  nil,
	4:  nil,
	5:  nil,
	6:  nil,
	7:  nil,
	8:  nil,
	9:  nil,
	10: nil,
	11: nil,
	12: nil,
	13: nil,
	14: nil,
	15: nil,
	16: nil,
	17: nil,
	18: nil,
	19: nil,
	20: nil,
	21: nil,
	22: nil,
	23: nil,
	24: nil,
	25: nil,
	26: nil,
	27: nil,
	28: nil,
	29: nil,
	30: nil,
	31: nil,
}

// Valid keys of Dci11AntPortsDmrsType2MaxLen1TwoCws.
var Dci11AntPortsDmrsType2MaxLen1TwoCwsValid = "0-1"

// refer to 3GPP 38.212 vf30
//  Table 7.3.1.2.2-4: Antenna port(s) (1000 + DMRS port), dmrs-Type=2, maxLength=2
var Dci11AntPortsDmrsType2MaxLen2OneCw = map[int]AntPortsInfo{
	0:  {1, []int{0}, 1},
	1:  {1, []int{1}, 1},
	2:  {1, []int{0, 1}, 1},
	3:  {2, []int{0}, 1},
	4:  {2, []int{1}, 1},
	5:  {2, []int{2}, 1},
	6:  {2, []int{3}, 1},
	7:  {2, []int{0, 1}, 1},
	8:  {2, []int{2, 3}, 1},
	9:  {2, []int{0, 1, 2}, 1},
	10: {2, []int{0, 1, 2, 3}, 1},
	11: {3, []int{0}, 1},
	12: {3, []int{1}, 1},
	13: {3, []int{2}, 1},
	14: {3, []int{3}, 1},
	15: {3, []int{4}, 1},
	16: {3, []int{5}, 1},
	17: {3, []int{0, 1}, 1},
	18: {3, []int{2, 3}, 1},
	19: {3, []int{4, 5}, 1},
	20: {3, []int{0, 1, 2}, 1},
	21: {3, []int{3, 4, 5}, 1},
	22: {3, []int{0, 1, 2, 3}, 1},
	23: {2, []int{0, 2}, 1},
	24: {3, []int{0}, 2},
	25: {3, []int{1}, 2},
	26: {3, []int{2}, 2},
	27: {3, []int{3}, 2},
	28: {3, []int{4}, 2},
	29: {3, []int{5}, 2},
	30: {3, []int{6}, 2},
	31: {3, []int{7}, 2},
	32: {3, []int{8}, 2},
	33: {3, []int{9}, 2},
	34: {3, []int{10}, 2},
	35: {3, []int{11}, 2},
	36: {3, []int{0, 1}, 2},
	37: {3, []int{2, 3}, 2},
	38: {3, []int{4, 5}, 2},
	39: {3, []int{6, 7}, 2},
	40: {3, []int{8, 9}, 2},
	41: {3, []int{10, 11}, 2},
	42: {3, []int{0, 1, 6}, 2},
	43: {3, []int{2, 3, 8}, 2},
	44: {3, []int{4, 5, 10}, 2},
	45: {3, []int{0, 1, 6, 7}, 2},
	46: {3, []int{2, 3, 8, 9}, 2},
	47: {3, []int{4, 5, 10, 11}, 2},
	48: {1, []int{0}, 2},
	49: {1, []int{1}, 2},
	50: {1, []int{6}, 2},
	51: {1, []int{7}, 2},
	52: {1, []int{0, 1}, 2},
	53: {1, []int{6, 7}, 2},
	54: {2, []int{0, 1}, 2},
	55: {2, []int{2, 3}, 2},
	56: {2, []int{6, 7}, 2},
	57: {2, []int{8, 9}, 2},
	58: nil,
	59: nil,
	60: nil,
	61: nil,
	62: nil,
	63: nil,
}

// Valid keys of Dci11AntPortsDmrsType2MaxLen2OneCw.
var Dci11AntPortsDmrsType2MaxLen2OneCwValid = "0-57"

// refer to 3GPP 38.212 vf30
//  Table 7.3.1.2.2-4: Antenna port(s) (1000 + DMRS port), dmrs-Type=2, maxLength=2
var Dci11AntPortsDmrsType2MaxLen2TwoCws = map[int]AntPortsInfo{
	0:  {3, []int{0, 1, 2, 3, 4}, 1},
	1:  {3, []int{0, 1, 2, 3, 4, 5}, 1},
	2:  {2, []int{0, 1, 2, 3, 6}, 2},
	3:  {2, []int{0, 1, 2, 3, 6, 8}, 2},
	4:  {2, []int{0, 1, 2, 3, 6, 7, 8}, 2},
	5:  {2, []int{0, 1, 2, 3, 6, 7, 8, 9}, 2},
	6:  nil,
	7:  nil,
	8:  nil,
	9:  nil,
	10: nil,
	11: nil,
	12: nil,
	13: nil,
	14: nil,
	15: nil,
	16: nil,
	17: nil,
	18: nil,
	19: nil,
	20: nil,
	21: nil,
	22: nil,
	23: nil,
	24: nil,
	25: nil,
	26: nil,
	27: nil,
	28: nil,
	29: nil,
	30: nil,
	31: nil,
	32: nil,
	33: nil,
	34: nil,
	35: nil,
	36: nil,
	37: nil,
	38: nil,
	39: nil,
	40: nil,
	41: nil,
	42: nil,
	43: nil,
	44: nil,
	45: nil,
	46: nil,
	47: nil,
	48: nil,
	49: nil,
	50: nil,
	51: nil,
	52: nil,
	53: nil,
	54: nil,
	55: nil,
	56: nil,
	57: nil,
	58: nil,
	59: nil,
	60: nil,
	61: nil,
	62: nil,
	63: nil,
}

// Valid keys of Dci11AntPortsDmrsType2MaxLen2TwoCws.
var Dci11AntPortsDmrsType2MaxLen2TwoCwsValid = "0-5"
